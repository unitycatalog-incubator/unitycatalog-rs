openapi: 3.0.3
info:
  title: Delta Sharing API
  description: An Open Protocol for Secure Data Sharing
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: "{scheme}://{host}/"
tags:
  - name: CatalogsService
    description: Manage catalogs and schemas in the service.
  - name: CredentialsService
    description:
      "Manage credentials to access external data sources and services\n as well as generate signed urls for the\
      \ Delta Sharing service."
  - name: ExternalLocationsService
  - name: RecipientsService
    description:
      "Recipients\n\n A recipient is an object you create using recipients/create to represent an organization which\n\
      \ you want to allow access shares. when you create a recipient object, Unity Catalog generates an\n activation link you\
      \ can send to the recipient. The recipient follows the activation link to download\n the credential file, and then uses\
      \ the credential file to establish a secure connection to receive\n the shared data. This sharing mode is called open\
      \ sharing."
  - name: SchemasService
    description:
      "A schema (also called a database) is the second layer of Unity Catalogâ€™s three-level namespace.\n A schema\
      \ organizes tables, views and functions. To access (or list) a table or view in a schema,\n users must have the USE_SCHEMA\
      \ data permission on the schema and its parent catalog, and they must\n have the SELECT permission on the table or view."
  - name: SharesService
    description: Service for managing shares
  - name: SharingService
    description: Service exposing the official APIs for Delta Sharing.
  - name: TablesService
  - name: TemporaryCredentialsService
  - name: VolumesService
paths:
  /catalogs:
    get:
      tags:
        - CatalogsService
      description:
        "List catalogs\n\n Gets an array of catalogs in the metastore. If the caller is the metastore admin,\n\
        \ all catalogs will be retrieved. Otherwise, only catalogs owned by the caller\n (or for which the caller has the\
        \ USE_CATALOG privilege) will be retrieved.\n There is no guarantee of a specific ordering of the elements in the\
        \ array."
      operationId: ListCatalogs
      parameters:
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Opaque pagination token to go to next page based on previous query.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCatalogsResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      tags:
        - CatalogsService
      description:
        "Create a new catalog\n\n Creates a new catalog instance in the parent metastore if the caller\n is a metastore\
        \ admin or has the CREATE_CATALOG privilege."
      operationId: CreateCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCatalogRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /catalogs/{name}:
    get:
      tags:
        - CatalogsService
      description:
        "Get a catalog\n\n Gets the specified catalog in a metastore. The caller must be a metastore admin,\n the\
        \ owner of the catalog, or a user that has the USE_CATALOG privilege set for their account."
      operationId: GetCatalog
      parameters:
        - name: name
          in: path
          description: Name of catalog.
          required: true
          schema:
            type: string
        - name: includeBrowse
          in: query
          description:
            Whether to include catalogs in the response for which the principal can only access selective metadata
            for
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      tags:
        - CatalogsService
      description:
        "Delete a catalog\n\n Deletes the catalog that matches the supplied name. The caller must\n be a metastore\
        \ admin or the owner of the catalog."
      operationId: DeleteCatalog
      parameters:
        - name: name
          in: path
          description: Name of catalog.
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Force deletion even if the catalog is not empty.
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    patch:
      tags:
        - CatalogsService
      description:
        "Update a catalog\n\n Updates the catalog that matches the supplied name. The caller must be either\n the\
        \ owner of the catalog, or a metastore admin (when changing the owner field of the catalog)."
      operationId: UpdateCatalog
      parameters:
        - name: name
          in: path
          description: Name of catalog.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCatalogRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /credentials:
    get:
      tags:
        - CredentialsService
      operationId: ListCredentials
      parameters:
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Opaque pagination token to go to next page based on previous query.
          schema:
            type: string
        - name: purpose
          in: query
          description: Return only credentials for the specified purpose.
          schema:
            type: integer
            format: enum
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCredentialsResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      tags:
        - CredentialsService
      operationId: CreateCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCredentialRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /credentials/{name}:
    get:
      tags:
        - CredentialsService
      operationId: GetCredential
      parameters:
        - name: name
          in: path
          description: Name of credential.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      tags:
        - CredentialsService
      operationId: DeleteCredential
      parameters:
        - name: name
          in: path
          description: Name of credential.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    patch:
      tags:
        - CredentialsService
      operationId: UpdateCredential
      parameters:
        - name: name
          in: path
          description: Name of credential.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCredentialRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /external-locations:
    get:
      tags:
        - ExternalLocationsService
      description: List external locations
      operationId: ListExternalLocations
      parameters:
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Opaque pagination token to go to next page based on previous query.
          schema:
            type: string
        - name: includeBrowse
          in: query
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListExternalLocationsResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      tags:
        - ExternalLocationsService
      description: Create a new external location
      operationId: CreateExternalLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExternalLocationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalLocationInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /external-locations/{name}:
    get:
      tags:
        - ExternalLocationsService
      description: Get an external location
      operationId: GetExternalLocation
      parameters:
        - name: name
          in: path
          description: Name of external location.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalLocationInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      tags:
        - ExternalLocationsService
      description: Delete an external location
      operationId: DeleteExternalLocation
      parameters:
        - name: name
          in: path
          description: Name of external location.
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Force deletion even if the external location is not empty.
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    patch:
      tags:
        - ExternalLocationsService
      description: Update an external location
      operationId: UpdateExternalLocation
      parameters:
        - name: name
          in: path
          description: Name of external location.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateExternalLocationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalLocationInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /recipients:
    get:
      tags:
        - RecipientsService
      description: List recipients.
      operationId: ListRecipients
      parameters:
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Opaque pagination token to go to next page based on previous query.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRecipientsResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      tags:
        - RecipientsService
      description: Create a new recipient.
      operationId: CreateRecipient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRecipientRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipientInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /recipients/{name}:
    get:
      tags:
        - RecipientsService
      description: Get a recipient by name.
      operationId: GetRecipient
      parameters:
        - name: name
          in: path
          description: Name of the recipient.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipientInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      tags:
        - RecipientsService
      description: Delete a recipient.
      operationId: DeleteRecipient
      parameters:
        - name: name
          in: path
          description: Name of the recipient.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    patch:
      tags:
        - RecipientsService
      description: Update a recipient.
      operationId: UpdateRecipient
      parameters:
        - name: name
          in: path
          description: Name of the recipient.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRecipientRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipientInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /schemas:
    get:
      tags:
        - SchemasService
      description:
        "Gets an array of schemas for a catalog in the metastore. If the caller is the metastore\n admin or the\
        \ owner of the parent catalog, all schemas for the catalog will be retrieved.\n Otherwise, only schemas owned by the\
        \ caller (or for which the caller has the USE_SCHEMA privilege)\n will be retrieved. There is no guarantee of a specific\
        \ ordering of the elements in the array."
      operationId: ListSchemas
      parameters:
        - name: catalogName
          in: query
          description: Name of parent catalog.
          schema:
            type: string
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Opaque pagination token to go to next page based on previous query.
          schema:
            type: string
        - name: includeBrowse
          in: query
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSchemasResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      tags:
        - SchemasService
      description:
        "Creates a new schema for catalog in the Metatastore. The caller must be a metastore admin,\n or have the\
        \ CREATE_SCHEMA privilege in the parent catalog."
      operationId: CreateSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSchemaRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /schemas/{fullName}:
    patch:
      tags:
        - SchemasService
      description:
        "Updates a schema for a catalog. The caller must be the owner of the schema or a metastore admin.\n If\
        \ the caller is a metastore admin, only the owner field can be changed in the update.\n If the name field must be\
        \ updated, the caller must be a metastore admin or have the CREATE_SCHEMA\n privilege on the parent catalog."
      operationId: UpdateSchema
      parameters:
        - name: fullName
          in: path
          description: Full name of schema, in form of catalog_name.schema_name.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSchemaRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /schemas/{name}:
    get:
      tags:
        - SchemasService
      description:
        "Gets the specified schema within the metastore.\n The caller must be a metastore admin, the owner of the\
        \ schema,\n or a user that has the USE_SCHEMA privilege on the schema."
      operationId: GetSchema
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fullName
          in: query
          description: "Full name of schema.\n\n Format: catalog_name.schema_name"
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      tags:
        - SchemasService
      description:
        "Deletes the specified schema from the parent catalog. The caller must be the owner\n of the schema or\
        \ an owner of the parent catalog."
      operationId: DeleteSchema
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: fullName
          in: query
          description: "Full name of schema to delete.\n\n Format: catalog_name.schema_name"
          schema:
            type: string
        - name: force
          in: query
          description: Force deletion even if the schema is not empty.
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /shares:
    get:
      tags:
        - SharingService
      description: List shares accessible to a recipient.
      operationId: ListShares
      parameters:
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description:
            "Specifies a page token to use. Set pageToken to the nextPageToken returned\n by a previous list request\
            \ to get the next page of results."
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSharesResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      tags:
        - SharesService
      description: Create a new share.
      operationId: CreateShare
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateShareRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShareInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /shares/{name}:
    get:
      tags:
        - SharingService
      description: Get the metadata for a specific share.
      operationId: GetShare
      parameters:
        - name: name
          in: path
          description: The share name to query. It's case-insensitive.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Share"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      tags:
        - SharesService
      description: Deletes a share.
      operationId: DeleteShare
      parameters:
        - name: name
          in: path
          description: Name of the share.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    patch:
      tags:
        - SharesService
      description: Update a share.
      operationId: UpdateShare
      parameters:
        - name: name
          in: path
          description: Name of the share.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateShareRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShareInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /shares/{name}/all-tables:
    get:
      tags:
        - SharingService
      description: List all the tables under all schemas in a share.
      operationId: ListShareTables
      parameters:
        - name: name
          in: path
          description: The share name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description:
            "Specifies a page token to use. Set pageToken to the nextPageToken returned\n by a previous list request\
            \ to get the next page of results."
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListShareTablesResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /shares/{share}/schemas:
    get:
      tags:
        - SharingService
      description: List the schemas in a share.
      operationId: ListSharingSchemas
      parameters:
        - name: share
          in: path
          description: The share name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description:
            "Specifies a page token to use. Set pageToken to the nextPageToken returned\n by a previous list request\
            \ to get the next page of results."
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSharingSchemasResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /shares/{share}/schemas/{name}/tables:
    get:
      tags:
        - SharingService
      description: List the tables in a given share's schema.
      operationId: ListSchemaTables
      parameters:
        - name: share
          in: path
          description: The share name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The schema name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description:
            "Specifies a page token to use. Set pageToken to the nextPageToken returned\n by a previous list request\
            \ to get the next page of results."
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSchemaTablesResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /shares/{share}/schemas/{schema}/tables/{name}/metadata:
    get:
      tags:
        - SharingService
      operationId: GetTableMetadata
      parameters:
        - name: share
          in: path
          description: The share name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: schema
          in: path
          description: The schema name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The table name to query. It's case-insensitive.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /shares/{share}/schemas/{schema}/tables/{name}/query:
    post:
      tags:
        - SharingService
      operationId: QueryTable
      parameters:
        - name: share
          in: path
          required: true
          schema:
            type: string
        - name: schema
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryTableRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /shares/{share}/schemas/{schema}/tables/{name}/version:
    get:
      tags:
        - SharingService
      description: Get the current version for a table within a schema.
      operationId: GetTableVersion
      parameters:
        - name: share
          in: path
          description: The share name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: schema
          in: path
          description: The schema name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The table name to query. It's case-insensitive.
          required: true
          schema:
            type: string
        - name: startingTimestamp
          in: query
          description:
            "The startingTimestamp of the query, a string in the  ISO8601 format, in the UTC timezone,\n such as\
            \ 2022-01-01T00:00:00Z. the server needs to return the earliest table version at\n or after the provided timestamp,\
            \ can be earlier than the timestamp of table version 0."
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTableVersionResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /table-summaries:
    get:
      tags:
        - TablesService
      description:
        "Gets an array of summaries for tables for a schema and catalog within the metastore. The table summaries\
        \ returned are either:\n - summaries for tables (within the current metastore and parent catalog and schema), when\
        \ the user is a metastore admin, or:\n - summaries for tables and schemas (within the current metastore and parent\
        \ catalog) for which the user has ownership or the\n   SELECT privilege on the table and ownership or USE_SCHEMA privilege\
        \ on the schema, provided that the user also has ownership\n   or the USE_CATALOG privilege on the parent catalog.\n\
        \n There is no guarantee of a specific ordering of the elements in the array."
      operationId: ListTableSummaries
      parameters:
        - name: catalogName
          in: query
          description: Name of parent catalog for tables of interest.
          schema:
            type: string
        - name: schemaNamePattern
          in: query
          description: A sql LIKE pattern (% and _) for schema names. All schemas will be returned if not set or empty.
          schema:
            type: string
        - name: tableNamePattern
          in: query
          description: A sql LIKE pattern (% and _) for table names. All tables will be returned if not set or empty.
          schema:
            type: string
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Opaque pagination token to go to next page based on previous query.
          schema:
            type: string
        - name: includeManifestCapabilities
          in: query
          description: Whether to include a manifest containing capabilities the table has.
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTableSummariesResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /tables:
    get:
      tags:
        - TablesService
      description:
        "Gets an array of all tables for the current metastore under the parent catalog and schema.\n\n The caller\
        \ must be a metastore admin or an owner of (or have the SELECT privilege on) the table.\n For the latter case, the\
        \ caller must also be the owner or have the USE_CATALOG privilege on the\n parent catalog and the USE_SCHEMA privilege\
        \ on the parent schema. There is no guarantee of a\n specific ordering of the elements in the array."
      operationId: ListTables
      parameters:
        - name: schemaName
          in: query
          description: Name of parent schema for tables of interest.
          schema:
            type: string
        - name: catalogName
          in: query
          description: Name of parent catalog for tables of interest.
          schema:
            type: string
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Opaque pagination token to go to next page based on previous query.
          schema:
            type: string
        - name: includeDeltaMetadata
          in: query
          description: Whether delta metadata should be included in the response.
          schema:
            type: boolean
        - name: omitColumns
          in: query
          description: Whether to omit the columns of the table from the response or not.
          schema:
            type: boolean
        - name: omitProperties
          in: query
          description: Whether to omit the properties of the table from the response or not.
          schema:
            type: boolean
        - name: omitUsername
          in: query
          description: Whether to omit the username of the table (e.g. owner, updated_by, created_by) from the response or not.
          schema:
            type: boolean
        - name: includeBrowse
          in: query
          description:
            Whether to include tables in the response for which the principal can only access selective metadata
            for
          schema:
            type: boolean
        - name: includeManifestCapabilities
          in: query
          description: Whether to include a manifest containing capabilities the table has.
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTablesResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      tags:
        - TablesService
      description: Create a table
      operationId: CreateTable
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTableRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /tables/{fullName}:
    get:
      tags:
        - TablesService
      description: Get a table
      operationId: GetTable
      parameters:
        - name: fullName
          in: path
          description: Full name of the table.
          required: true
          schema:
            type: string
        - name: includeDeltaMetadata
          in: query
          description: Whether delta metadata should be included in the response.
          schema:
            type: boolean
        - name: includeBrowse
          in: query
          description:
            Whether to include tables in the response for which the principal can only access selective metadata
            for
          schema:
            type: boolean
        - name: includeManifestCapabilities
          in: query
          description: Whether to include a manifest containing capabilities the table has.
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      tags:
        - TablesService
      description: Delete a table
      operationId: DeleteTable
      parameters:
        - name: fullName
          in: path
          description: Full name of the table.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /tables/{fullName}/exists:
    get:
      tags:
        - TablesService
      description: Get boolean reflecting if table exists
      operationId: GetTableExists
      parameters:
        - name: fullName
          in: path
          description: Full name of the table.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTableExistsResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /temporary-path-credentials:
    post:
      tags:
        - TemporaryCredentialsService
      description: Generate a new set of credentials for a volume.
      operationId: GenerateTemporaryPathCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateTemporaryPathCredentialsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemporaryCredential"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /temporary-table-credentials:
    post:
      tags:
        - TemporaryCredentialsService
      description: Generate a new set of credentials for a table.
      operationId: GenerateTemporaryTableCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateTemporaryTableCredentialsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemporaryCredential"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /volumes:
    get:
      tags:
        - VolumesService
      description: Lists volumes.
      operationId: ListVolumes
      parameters:
        - name: catalogName
          in: query
          description: The identifier of the catalog
          schema:
            type: string
        - name: schemaName
          in: query
          description: The identifier of the schema
          schema:
            type: string
        - name: maxResults
          in: query
          description: The maximum number of results per page that should be returned.
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Opaque pagination token to go to next page based on previous query.
          schema:
            type: string
        - name: includeBrowse
          in: query
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVolumesResponse"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    post:
      tags:
        - VolumesService
      operationId: CreateVolume
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVolumeRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /volumes/{name}:
    get:
      tags:
        - VolumesService
      operationId: GetVolume
      parameters:
        - name: name
          in: path
          description: The three-level (fully qualified) name of the volume
          required: true
          schema:
            type: string
        - name: includeBrowse
          in: query
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      tags:
        - VolumesService
      operationId: DeleteVolume
      parameters:
        - name: name
          in: path
          description: The three-level (fully qualified) name of the volume
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    patch:
      tags:
        - VolumesService
      operationId: UpdateVolume
      parameters:
        - name: name
          in: path
          description: The three-level (fully qualified) name of the volume
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateVolumeRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeInfo"
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
components:
  schemas:
    AwsTemporaryCredentials:
      additionalProperties: false
      properties:
        access_key_id:
          description: The access key ID that identifies the temporary credentials.
          type: string
        access_point:
          description:
            The Amazon Resource Name (ARN) of the S3 access point for temporary credentials related the external
            location.
          type: string
        secret_access_key:
          description: The secret access key that can be used to sign AWS API requests.
          type: string
        session_token:
          description: The token that users must pass to AWS API to use the temporary credentials.
          type: string
      required:
        - access_key_id
        - access_point
        - secret_access_key
        - session_token
      title: Aws Temporary Credentials
      type: object
    AzureAad:
      additionalProperties: false
      properties:
        aad_token:
          description: Opaque token that contains claims that you can use in Azure Active Directory to access cloud services.
          type: string
      required:
        - aad_token
      title: Azure Aad
      type: object
    AzureManagedIdentity:
      additionalProperties: false
      properties:
        application_id:
          description: The application ID of the application registration within the referenced AAD tenant.
          type: string
        msi_resource_id:
          description: Msi resource id for use with managed identity authentication
          type: string
        object_id:
          description: Object id for use with managed identity authentication
          type: string
      title: Azure Managed Identity
      type: object
    AzureServicePrincipal:
      additionalProperties: false
      properties:
        application_id:
          description: The application ID of the application registration within the referenced AAD tenant.
          type: string
        client_secret:
          description: The client secret generated for the above app ID in AAD.
          type: string
        directory_id:
          description: The directory ID corresponding to the Azure Active Directory (AAD) tenant of the application.
          type: string
        federated_token_file:
          description: Specifically useful for workload identity federation.
          title: Location of the file containing a federated token.
          type: string
      required:
        - directory_id
        - application_id
      title: Azure Service Principal
      type: object
    AzureStorageKey:
      additionalProperties: false
      properties:
        account_key:
          description: The account key of the storage account.
          type: string
        account_name:
          description: The name of the storage account.
          type: string
      required:
        - account_name
        - account_key
      title: Azure Storage Key
      type: object
    AzureUserDelegationSas:
      additionalProperties: false
      properties:
        sas_token:
          description: The signed URI (SAS Token) used to access blob services for a given path
          type: string
      required:
        - sas_token
      title: Azure User Delegation Sas
      type: object
    CatalogInfo:
      additionalProperties: false
      description: A catalog is a root-level namespace that contains schemas.
      properties:
        browse_only:
          description:
            "Indicates whether the principal is limited to retrieving metadata\n for the associated object through\
            \ the BROWSE privilege when include_browse\n is enabled in the request."
          type: boolean
        catalog_type:
          description: The type of the catalog.
          enum:
            - CATALOG_TYPE_UNSPECIFIED
            - MANAGED_CATALOG
            - DELTASHARING_CATALOG
            - SYSTEM_CATALOG
          title: Catalog Type
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        created_at:
          description: Time at which this catalog was created, in epoch milliseconds.
          type: integer
          minimum: 0
          exclusiveMinimum: true
        created_by:
          description: Username of catalog creator.
          type: string
        id:
          description: Unique identifier for the catalog.
          type: string
        name:
          description: Name of catalog.
          type: string
        owner:
          description: Username of current owner of catalog.
          type: string
        properties:
          additionalProperties:
            type: string
          description: A map of key-value properties attached to the securable.
          propertyNames:
            type: string
          type: object
        provider_name:
          description: A Delta Sharing catalog is a catalog that is based on a Delta share on a remote sharing server.
          title: The name of delta sharing provider.
          type: string
        share_name:
          description: The name of the share under the share provider.
          type: string
        storage_root:
          description: Storage root URL for managed tables within catalog.
          type: string
        updated_at:
          description: Time at which this catalog was last updated, in epoch milliseconds.
          type: integer
        updated_by:
          description: Username of user who last modified catalog.
          type: string
      required:
        - name
      title: Catalog Info
      type: object
    ColumnInfo:
      additionalProperties: false
      properties:
        column_id:
          description: a unique id for the column
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        name:
          description: Name of the column
          type: string
        nullable:
          description: Whether field may be Null.
          type: boolean
        partition_index:
          description: Partition index for column.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        position:
          description: Ordinal position of column (starting at position 0).
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_interval_type:
          description: Format of IntervalType.
          type: string
        type_json:
          description: Full data type specification, JSON-serialized.
          type: string
        type_name:
          description: Data type name.
          enum:
            - COLUMN_TYPE_NAME_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - SHORT
            - INT
            - LONG
            - FLOAT
            - DOUBLE
            - DATE
            - TIMESTAMP
            - STRING
            - BINARY
            - DECIMAL
            - INTERVAL
            - ARRAY
            - STRUCT
            - MAP
            - CHAR
            - "NULL"
            - USER_DEFINED_TYPE
            - TIMESTAMP_NTZ
            - VARIANT
            - TABLE_TYPE
          title: Column Type Name
          type: string
        type_precision:
          description: Digits of precision; required for DecimalTypes.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_scale:
          description: Digits to right of decimal; Required for DecimalTypes.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_text:
          description: Full data type specification as SQL/catalogString text.
          type: string
      required:
        - name
        - type_text
        - type_json
        - type_name
      title: Column Info
      type: object
    CreateCatalogRequest:
      additionalProperties: false
      description: Create a new catalog
      properties:
        comment:
          description: User-provided free-form text description.
          type: string
        name:
          description: Name of catalog.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        properties:
          additionalProperties:
            type: string
          description: A map of key-value properties attached to the securable.
          propertyNames:
            type: string
          type: object
        provider_name:
          description: A Delta Sharing catalog is a catalog that is based on a Delta share on a remote sharing server.
          minLength: 3
          pattern: ^[a-z][0-9a-z-_]*[0-9a-z]$
          title: The name of delta sharing provider.
          type: string
        share_name:
          description: The name of the share under the share provider.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        storage_root:
          description: Storage root URL for managed tables within catalog.
          pattern: ^(?:(?:[a-zA-Z][a-zA-Z\d+\-.]*):)?(?://(?:[A-Za-z0-9\-\.]+(?::\d+)?))?(/[^\?#]*)?(?:\?([^\#]*))?(?:\#(.*))?$
          type: string
      required:
        - name
      title: Create Catalog Request
      type: object
    CreateCredentialRequest:
      additionalProperties: false
      properties:
        application_id:
          description: The application ID of the application registration within the referenced AAD tenant.
          type: string
        msi_resource_id:
          description: Msi resource id for use with managed identity authentication
          type: string
        object_id:
          description: Object id for use with managed identity authentication
          type: string
      title: Azure Managed Identity
      type: object
    CreateExternalLocationRequest:
      additionalProperties: false
      description: Create a new external location
      properties:
        comment:
          description: User-provided free-form text description.
          type: string
        credential_name:
          description: Name of the storage credential used with this location.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        name:
          description: Name of external location.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        read_only:
          description: Indicates whether the external location is read-only.
          type: boolean
        skip_validation:
          description: Skips validation of the storage credential associated with the external location.
          type: boolean
        url:
          description: Path URL of the external location.
          pattern: ^(?:(?:[a-zA-Z][a-zA-Z\d+\-.]*):)?(?://(?:[A-Za-z0-9\-\.]+(?::\d+)?))?(/[^\?#]*)?(?:\?([^\#]*))?(?:\#(.*))?$
          type: string
      required:
        - name
        - url
        - credential_name
      title: Create External Location Request
      type: object
    CreateRecipientRequest:
      additionalProperties: false
      description: Creates a new recipient
      properties:
        authentication_type:
          description: The delta sharing authentication type.
          enum:
            - AUTHENTICATION_TYPE_UNSPECIFIED
            - TOKEN
            - OAUTH_CLIENT_CREDENTIALS
          title: Authentication Type
          type: string
        comment:
          description: Description about the recipient.
          type: string
        expiration_time:
          description: Expiration timestamp of the token, in epoch milliseconds.
          type: integer
        name:
          description: Name of the recipient.
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
        owner:
          description: Username of the recipient owner.
          format: email
          type: string
        properties:
          additionalProperties:
            type: string
          description:
            "When provided in update request, the specified properties will override the existing properties.\n\
            \ To add and remove properties, one would need to perform a read-modify-write."
          propertyNames:
            type: string
          title: Recipient properties as map of string key-value pairs.
          type: object
      required:
        - name
        - authentication_type
        - owner
      title: Create Recipient Request
      type: object
    CreateSchemaRequest:
      additionalProperties: false
      description: Create a new Schema
      properties:
        catalog_name:
          description: Name of parent catalog.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        name:
          description: Name of schema, relative to parent catalog.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        properties:
          additionalProperties:
            type: string
          description: A map of key-value properties attached to the securable.
          propertyNames:
            type: string
          type: object
      required:
        - name
        - catalog_name
      title: Create Schema Request
      type: object
    CreateShareRequest:
      additionalProperties: false
      description:
        "Data objects can be added after creation with update.\n The caller must be a metastore admin or have the\
        \ CREATE_SHARE privilege on the metastore."
      properties:
        comment:
          description: User-provided free-form text description.
          type: string
        name:
          description: Name of the share.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - name
      title: Creates a new share for data objects.
      type: object
    CreateTableRequest:
      additionalProperties: false
      properties:
        column_id:
          description: a unique id for the column
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        name:
          description: Name of the column
          type: string
        nullable:
          description: Whether field may be Null.
          type: boolean
        partition_index:
          description: Partition index for column.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        position:
          description: Ordinal position of column (starting at position 0).
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_interval_type:
          description: Format of IntervalType.
          type: string
        type_json:
          description: Full data type specification, JSON-serialized.
          type: string
        type_name:
          description: Data type name.
          enum:
            - COLUMN_TYPE_NAME_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - SHORT
            - INT
            - LONG
            - FLOAT
            - DOUBLE
            - DATE
            - TIMESTAMP
            - STRING
            - BINARY
            - DECIMAL
            - INTERVAL
            - ARRAY
            - STRUCT
            - MAP
            - CHAR
            - "NULL"
            - USER_DEFINED_TYPE
            - TIMESTAMP_NTZ
            - VARIANT
            - TABLE_TYPE
          title: Column Type Name
          type: string
        type_precision:
          description: Digits of precision; required for DecimalTypes.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_scale:
          description: Digits to right of decimal; Required for DecimalTypes.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_text:
          description: Full data type specification as SQL/catalogString text.
          type: string
      required:
        - name
        - type_text
        - type_json
        - type_name
      title: Column Info
      type: object
    CreateVolumeRequest:
      additionalProperties: false
      description: Create a new Volume
      properties:
        catalog_name:
          description: The identifier of the catalog
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        comment:
          description: The storage location on the cloud
          maxLength: 65536
          minLength: 1
          type: string
        name:
          description: The identifier of the volume
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        schema_name:
          description: The identifier of the schema
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        storage_location:
          description: The storage location on the cloud
          type: string
        volume_type:
          description:
            "An external volume is located in the specified external location.\n A managed volume is located in\
            \ the default location which is specified\n by the parent schema, or the parent catalog, or the Metastore."
          enum:
            - VOLUME_TYPE_UNSPECIFIED
            - VOLUME_TYPE_EXTERNAL
            - VOLUME_TYPE_MANAGED
          title: Volume Type
          type: string
      required:
        - catalog_name
        - schema_name
        - name
        - volume_type
      title: Create Volume Request
      type: object
    CredentialInfo:
      additionalProperties: false
      properties:
        application_id:
          description: The application ID of the application registration within the referenced AAD tenant.
          type: string
        msi_resource_id:
          description: Msi resource id for use with managed identity authentication
          type: string
        object_id:
          description: Object id for use with managed identity authentication
          type: string
      title: Azure Managed Identity
      type: object
    DataObject:
      additionalProperties: false
      properties:
        added_at:
          description: The time when this data object is added to the share, in epoch milliseconds.
          type: integer
        added_by:
          description: Username of the sharer.
          type: string
        comment:
          description: A user-provided comment when adding the data object to the share.
          type: string
        data_object_type:
          description: Type of the data object.
          enum:
            - DATA_OBJECT_TYPE_UNSPECIFIED
            - TABLE
            - SCHEMA
          title: Data Object Type
          type: string
        enable_cdf:
          description: Whether to enable cdf or indicate if cdf is enabled on the shared object.
          type: boolean
        history_data_sharing_status:
          description: Whether to enable or disable sharing of data history. If not specified, the default is DISABLED.
          enum:
            - DISABLED
            - ENABLED
          title: History Status
          type: string
        name:
          description: For example, a table's fully qualified name is in the format of <catalog>.<schema>.<table>,
          title: A fully qualified name that uniquely identifies a data object.
          type: string
        partitions:
          description: Array of partitions for the shared data.
          items:
            type: string
          type: array
        shared_as:
          description:
            "If this new name is not provided, the object's original name will be used as the shared_as name.\n\
            \ The shared_as name must be unique within a share.\n For tables, the new name must follow the format of <schema>.<table>."
          title: A user-provided new name for the data object within the share.
          type: string
        start_version:
          description:
            "This allows data providers to control the lowest object version that is accessible by clients.\n If\
            \ specified, clients can query snapshots or changes for versions >= start_version.\n If not specified, clients\
            \ can only query starting from the version of the object at the time it was added to the share.\n\n NOTE: The\
            \ start_version should be <= the current version of the object."
          title: The start version associated with the object.
          type: integer
      required:
        - name
        - data_object_type
      title: Data Object
      type: object
    DataObjectUpdate:
      additionalProperties: false
      properties:
        added_at:
          description: The time when this data object is added to the share, in epoch milliseconds.
          type: integer
        added_by:
          description: Username of the sharer.
          type: string
        comment:
          description: A user-provided comment when adding the data object to the share.
          type: string
        data_object_type:
          description: Type of the data object.
          enum:
            - DATA_OBJECT_TYPE_UNSPECIFIED
            - TABLE
            - SCHEMA
          title: Data Object Type
          type: string
        enable_cdf:
          description: Whether to enable cdf or indicate if cdf is enabled on the shared object.
          type: boolean
        history_data_sharing_status:
          description: Whether to enable or disable sharing of data history. If not specified, the default is DISABLED.
          enum:
            - DISABLED
            - ENABLED
          title: History Status
          type: string
        name:
          description: For example, a table's fully qualified name is in the format of <catalog>.<schema>.<table>,
          title: A fully qualified name that uniquely identifies a data object.
          type: string
        partitions:
          description: Array of partitions for the shared data.
          items:
            type: string
          type: array
        shared_as:
          description:
            "If this new name is not provided, the object's original name will be used as the shared_as name.\n\
            \ The shared_as name must be unique within a share.\n For tables, the new name must follow the format of <schema>.<table>."
          title: A user-provided new name for the data object within the share.
          type: string
        start_version:
          description:
            "This allows data providers to control the lowest object version that is accessible by clients.\n If\
            \ specified, clients can query snapshots or changes for versions >= start_version.\n If not specified, clients\
            \ can only query starting from the version of the object at the time it was added to the share.\n\n NOTE: The\
            \ start_version should be <= the current version of the object."
          title: The start version associated with the object.
          type: integer
      required:
        - name
        - data_object_type
      title: Data Object
      type: object
    DeltaLogMessage:
      additionalProperties: false
      description: Log message for Delta response.
      properties:
        metadata:
          $ref: "#/$defs/unitycatalog.sharing.v1.MetadatDelta.schema.strict.json"
        protocol:
          $ref: "#/$defs/unitycatalog.sharing.v1.ProtocolDelta.schema.strict.json"
      title: Delta Log Message
      type: object
    DeltaResponse:
      additionalProperties: false
      description: Log message for Delta response.
      properties:
        metadata:
          $ref: "#/$defs/unitycatalog.sharing.v1.MetadatDelta.schema.strict.json"
        protocol:
          $ref: "#/$defs/unitycatalog.sharing.v1.ProtocolDelta.schema.strict.json"
      title: Delta Log Message
      type: object
    ExternalLocationInfo:
      additionalProperties: false
      properties:
        browse_only:
          description:
            "Indicates whether the principal is limited to retrieving metadata\n for the associated object through\
            \ the BROWSE privilege when include_browse is enabled in the request."
          type: boolean
        comment:
          description: User-provided free-form text description.
          type: string
        created_at:
          description: Time at which this catalog was created, in epoch milliseconds.
          type: integer
        created_by:
          description: Username of catalog creator.
          type: string
        credential_id:
          description: Unique ID of the location's storage credential.
          type: string
        credential_name:
          description: Name of the storage credential used with this location.
          type: string
        external_location_id:
          type: string
        name:
          description: Name of the external location.
          type: string
        owner:
          description: The owner of the external location.
          type: string
        read_only:
          description: Indicates whether the external location is read-only.
          type: boolean
        updated_at:
          description: Time at which this catalog was last updated, in epoch milliseconds.
          type: integer
        updated_by:
          description: Username of user who last modified catalog.
          type: string
        url:
          description: Path URL of the external location.
          type: string
      required:
        - name
        - url
        - credential_name
        - read_only
        - credential_id
      title: External Location Info
      type: object
    Format:
      additionalProperties: false
      description: File format for data files in a table
      properties:
        options:
          additionalProperties:
            type: string
          description: A map containing configuration options for the format
          propertyNames:
            type: string
          type: object
        provider:
          description: Name of the encoding for files in this table
          type: string
      required:
        - provider
      title: Format
      type: object
    GcpOauthToken:
      additionalProperties: false
      properties:
        oauth_token:
          description: The OAuth token used to access Google Cloud services.
          type: string
      required:
        - oauth_token
      title: Gcp Oauth Token
      type: object
    GenerateTemporaryPathCredentialsRequest:
      additionalProperties: false
      description: Genearte a new set of credentials for a volume.
      properties:
        dry_run:
          type: boolean
        operation:
          description: The operation to perform with the credentials.
          enum:
            - UNSPECIFIED
            - PATH_READ
            - PATH_READ_WRITE
            - PATH_CREATE_TABLE
          title: Operation
          type: string
        url:
          description: The name of the volume for which to generate credentials.
          type: string
      required:
        - url
        - operation
      title: Generate Temporary Path Credentials Request
      type: object
    GenerateTemporaryTableCredentialsRequest:
      additionalProperties: false
      description: Gebnerate a new set of credentials for a table.
      properties:
        operation:
          description: The operation to perform with the credentials.
          enum:
            - UNSPECIFIED
            - READ
            - READ_WRITE
          title: Operation
          type: string
        table_id:
          description: The name of the table for which to generate credentials.
          type: string
      required:
        - table_id
        - operation
      title: Generate Temporary Table Credentials Request
      type: object
    GetTableExistsResponse:
      additionalProperties: false
      properties:
        table_exists:
          description: Boolean reflecting if table exists.
          type: boolean
      required:
        - table_exists
      title: Get Table Exists Response
      type: object
    GetTableVersionResponse:
      additionalProperties: false
      description: Response for GetTableVersionRequest.
      properties:
        version:
          description: The table version that was requested.
          type: integer
      required:
        - version
      title: Get Table Version Response
      type: object
    GoogleProtobufAny:
      type: object
      properties:
        "@type":
          type: string
          description: The type of the serialized message.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
    JsonPredicate:
      additionalProperties: false
      properties:
        children:
          description: The inputs to the operation - if any.
          items:
            $ref: "#/$defs/unitycatalog.sharing.v1.JsonPredicate.schema.strict.json"
          type: array
        name:
          description: This is only applicable to column ops.
          title: Specifies the name of a column.
          type: string
        op:
          description: The operation to perform.
          type: string
        value:
          description: This is only applicable to literal ops.
          title: Specifies the value of a literal.
          type: string
        value_type:
          description: This is only applicate to column and literal ops.
          title: Specifies the value type of a column or a literal op.
          type: string
      required:
        - op
      title: Json Predicate
      type: object
    ListCatalogsResponse:
      additionalProperties: false
      description: A catalog is a root-level namespace that contains schemas.
      properties:
        browse_only:
          description:
            "Indicates whether the principal is limited to retrieving metadata\n for the associated object through\
            \ the BROWSE privilege when include_browse\n is enabled in the request."
          type: boolean
        catalog_type:
          description: The type of the catalog.
          enum:
            - CATALOG_TYPE_UNSPECIFIED
            - MANAGED_CATALOG
            - DELTASHARING_CATALOG
            - SYSTEM_CATALOG
          title: Catalog Type
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        created_at:
          description: Time at which this catalog was created, in epoch milliseconds.
          type: integer
          minimum: 0
          exclusiveMinimum: true
        created_by:
          description: Username of catalog creator.
          type: string
        id:
          description: Unique identifier for the catalog.
          type: string
        name:
          description: Name of catalog.
          type: string
        owner:
          description: Username of current owner of catalog.
          type: string
        properties:
          additionalProperties:
            type: string
          description: A map of key-value properties attached to the securable.
          propertyNames:
            type: string
          type: object
        provider_name:
          description: A Delta Sharing catalog is a catalog that is based on a Delta share on a remote sharing server.
          title: The name of delta sharing provider.
          type: string
        share_name:
          description: The name of the share under the share provider.
          type: string
        storage_root:
          description: Storage root URL for managed tables within catalog.
          type: string
        updated_at:
          description: Time at which this catalog was last updated, in epoch milliseconds.
          type: integer
        updated_by:
          description: Username of user who last modified catalog.
          type: string
      required:
        - name
      title: Catalog Info
      type: object
    ListCredentialsResponse:
      additionalProperties: false
      properties:
        application_id:
          description: The application ID of the application registration within the referenced AAD tenant.
          type: string
        msi_resource_id:
          description: Msi resource id for use with managed identity authentication
          type: string
        object_id:
          description: Object id for use with managed identity authentication
          type: string
      title: Azure Managed Identity
      type: object
    ListExternalLocationsResponse:
      additionalProperties: false
      properties:
        browse_only:
          description:
            "Indicates whether the principal is limited to retrieving metadata\n for the associated object through\
            \ the BROWSE privilege when include_browse is enabled in the request."
          type: boolean
        comment:
          description: User-provided free-form text description.
          type: string
        created_at:
          description: Time at which this catalog was created, in epoch milliseconds.
          type: integer
        created_by:
          description: Username of catalog creator.
          type: string
        credential_id:
          description: Unique ID of the location's storage credential.
          type: string
        credential_name:
          description: Name of the storage credential used with this location.
          type: string
        external_location_id:
          type: string
        name:
          description: Name of the external location.
          type: string
        owner:
          description: The owner of the external location.
          type: string
        read_only:
          description: Indicates whether the external location is read-only.
          type: boolean
        updated_at:
          description: Time at which this catalog was last updated, in epoch milliseconds.
          type: integer
        updated_by:
          description: Username of user who last modified catalog.
          type: string
        url:
          description: Path URL of the external location.
          type: string
      required:
        - name
        - url
        - credential_name
        - read_only
        - credential_id
      title: External Location Info
      type: object
    ListRecipientsResponse:
      additionalProperties: false
      description: Response to list recipients.
      properties:
        next_page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
        recipients:
          description: List of recipients.
          items:
            $ref: "#/$defs/unitycatalog.recipients.v1.RecipientInfo.schema.strict.json"
          type: array
      title: List Recipients Response
      type: object
    ListSchemaTablesResponse:
      additionalProperties: false
      description: Response for ListSchemaTablesRequest.
      properties:
        items:
          description: The tables that were requested.
          items:
            $ref: "#/$defs/unitycatalog.sharing.v1.SharingTable.schema.strict.json"
          type: array
        next_page_token:
          description:
            "Token that can be used to retrieve the next page of tables.\n An empty or missing token means that\
            \ no more tables are available for retrieval."
          type: string
      title: List Schema Tables Response
      type: object
    ListSchemasResponse:
      additionalProperties: false
      description: List Schemas response.
      properties:
        next_page_token:
          description: The next_page_token value to include in the next List request.
          type: string
        schemas:
          description: The schemas returned.
          items:
            $ref: "#/$defs/unitycatalog.schemas.v1.SchemaInfo.schema.strict.json"
          type: array
      title: List Schemas Response
      type: object
    ListShareTablesResponse:
      additionalProperties: false
      description: Response for ListShareTablesRequest.
      properties:
        items:
          description: The tables that were requested.
          items:
            $ref: "#/$defs/unitycatalog.sharing.v1.SharingTable.schema.strict.json"
          type: array
        next_page_token:
          description:
            "Token that can be used to retrieve the next page of tables.\n An empty or missing token means that\
            \ no more tables are available for retrieval."
          type: string
      title: List Share Tables Response
      type: object
    ListSharesResponse:
      additionalProperties: false
      properties:
        added_at:
          description: The time when this data object is added to the share, in epoch milliseconds.
          type: integer
        added_by:
          description: Username of the sharer.
          type: string
        comment:
          description: A user-provided comment when adding the data object to the share.
          type: string
        data_object_type:
          description: Type of the data object.
          enum:
            - DATA_OBJECT_TYPE_UNSPECIFIED
            - TABLE
            - SCHEMA
          title: Data Object Type
          type: string
        enable_cdf:
          description: Whether to enable cdf or indicate if cdf is enabled on the shared object.
          type: boolean
        history_data_sharing_status:
          description: Whether to enable or disable sharing of data history. If not specified, the default is DISABLED.
          enum:
            - DISABLED
            - ENABLED
          title: History Status
          type: string
        name:
          description: For example, a table's fully qualified name is in the format of <catalog>.<schema>.<table>,
          title: A fully qualified name that uniquely identifies a data object.
          type: string
        partitions:
          description: Array of partitions for the shared data.
          items:
            type: string
          type: array
        shared_as:
          description:
            "If this new name is not provided, the object's original name will be used as the shared_as name.\n\
            \ The shared_as name must be unique within a share.\n For tables, the new name must follow the format of <schema>.<table>."
          title: A user-provided new name for the data object within the share.
          type: string
        start_version:
          description:
            "This allows data providers to control the lowest object version that is accessible by clients.\n If\
            \ specified, clients can query snapshots or changes for versions >= start_version.\n If not specified, clients\
            \ can only query starting from the version of the object at the time it was added to the share.\n\n NOTE: The\
            \ start_version should be <= the current version of the object."
          title: The start version associated with the object.
          type: integer
      required:
        - name
        - data_object_type
      title: Data Object
      type: object
    ListSharingSchemasResponse:
      additionalProperties: false
      description: Response for ListSharingSchemasRequest.
      properties:
        items:
          description: The schemas that were requested.
          items:
            $ref: "#/$defs/unitycatalog.sharing.v1.SharingSchema.schema.strict.json"
          type: array
        next_page_token:
          description:
            "Token that can be used to retrieve the next page of schemas.\n An empty or missing token means that\
            \ no more schemas are available for retrieval."
          type: string
      title: List Sharing Schemas Response
      type: object
    ListTableSummariesResponse:
      additionalProperties: false
      properties:
        next_page_token:
          description: The next_page_token value to include in the next List request.
          type: string
        tables:
          description: The table summaries returned.
          items:
            $ref: "#/$defs/unitycatalog.tables.v1.TableSummary.schema.strict.json"
          type: array
      title: List Table Summaries Response
      type: object
    ListTablesResponse:
      additionalProperties: false
      properties:
        column_id:
          description: a unique id for the column
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        name:
          description: Name of the column
          type: string
        nullable:
          description: Whether field may be Null.
          type: boolean
        partition_index:
          description: Partition index for column.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        position:
          description: Ordinal position of column (starting at position 0).
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_interval_type:
          description: Format of IntervalType.
          type: string
        type_json:
          description: Full data type specification, JSON-serialized.
          type: string
        type_name:
          description: Data type name.
          enum:
            - COLUMN_TYPE_NAME_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - SHORT
            - INT
            - LONG
            - FLOAT
            - DOUBLE
            - DATE
            - TIMESTAMP
            - STRING
            - BINARY
            - DECIMAL
            - INTERVAL
            - ARRAY
            - STRUCT
            - MAP
            - CHAR
            - "NULL"
            - USER_DEFINED_TYPE
            - TIMESTAMP_NTZ
            - VARIANT
            - TABLE_TYPE
          title: Column Type Name
          type: string
        type_precision:
          description: Digits of precision; required for DecimalTypes.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_scale:
          description: Digits to right of decimal; Required for DecimalTypes.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_text:
          description: Full data type specification as SQL/catalogString text.
          type: string
      required:
        - name
        - type_text
        - type_json
        - type_name
      title: Column Info
      type: object
    ListVolumesResponse:
      additionalProperties: false
      description: List Schemas response.
      properties:
        next_page_token:
          description:
            "Absent if there are no more pages. page_token should be set to\n this value for the next request to\
            \ retrieve the next page of results."
          title: Opaque token to retrieve the next page of results.
          type: string
        volumes:
          description: The volumes returned.
          items:
            $ref: "#/$defs/unitycatalog.volumes.v1.VolumeInfo.schema.strict.json"
          type: array
      title: List Volumes Response
      type: object
    MetadatDelta:
      additionalProperties: false
      description: File format for data files in a table
      properties:
        options:
          additionalProperties:
            type: string
          description: A map containing configuration options for the format
          propertyNames:
            type: string
          type: object
        provider:
          description: Name of the encoding for files in this table
          type: string
      required:
        - provider
      title: Format
      type: object
    Metadata:
      additionalProperties: false
      description: File format for data files in a table
      properties:
        options:
          additionalProperties:
            type: string
          description: A map containing configuration options for the format
          propertyNames:
            type: string
          type: object
        provider:
          description: Name of the encoding for files in this table
          type: string
      required:
        - provider
      title: Format
      type: object
    MetadataParquet:
      additionalProperties: false
      description: File format for data files in a table
      properties:
        options:
          additionalProperties:
            type: string
          description: A map containing configuration options for the format
          propertyNames:
            type: string
          type: object
        provider:
          description: Name of the encoding for files in this table
          type: string
      required:
        - provider
      title: Format
      type: object
    ParquetLogMessage:
      additionalProperties: false
      description: File format for data files in a table
      properties:
        options:
          additionalProperties:
            type: string
          description: A map containing configuration options for the format
          propertyNames:
            type: string
          type: object
        provider:
          description: Name of the encoding for files in this table
          type: string
      required:
        - provider
      title: Format
      type: object
    ParquetResponse:
      additionalProperties: false
      description: File format for data files in a table
      properties:
        options:
          additionalProperties:
            type: string
          description: A map containing configuration options for the format
          propertyNames:
            type: string
          type: object
        provider:
          description: Name of the encoding for files in this table
          type: string
      required:
        - provider
      title: Format
      type: object
    ProtocolDelta:
      additionalProperties: false
      description: Protocol for Delta response.
      properties:
        min_reader_version:
          description:
            "The minimum version of the protocol that a client must implement\n in order to correctly read a Delta\
            \ Lake table."
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        min_writer_version:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
        - min_reader_version
        - min_writer_version
      title: Protocol Delta
      type: object
    ProtocolParquet:
      additionalProperties: false
      description: Protocol for Parquet response.
      properties:
        min_reader_version:
          description:
            "The minimum version of the protocol that a client must implement\n in order to correctly read a Delta\
            \ Lake table."
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
        - min_reader_version
      title: Protocol Parquet
      type: object
    QueryResponse:
      additionalProperties: false
      description: Log message for Delta response.
      properties:
        metadata:
          $ref: "#/$defs/unitycatalog.sharing.v1.MetadatDelta.schema.strict.json"
        protocol:
          $ref: "#/$defs/unitycatalog.sharing.v1.ProtocolDelta.schema.strict.json"
      title: Delta Log Message
      type: object
    QueryTableRequest:
      additionalProperties: false
      properties:
        children:
          description: The inputs to the operation - if any.
          items:
            $ref: "#/$defs/unitycatalog.sharing.v1.JsonPredicate.schema.strict.json"
          type: array
        name:
          description: This is only applicable to column ops.
          title: Specifies the name of a column.
          type: string
        op:
          description: The operation to perform.
          type: string
        value:
          description: This is only applicable to literal ops.
          title: Specifies the value of a literal.
          type: string
        value_type:
          description: This is only applicate to column and literal ops.
          title: Specifies the value type of a column or a literal op.
          type: string
      required:
        - op
      title: Json Predicate
      type: object
    R2TemporaryCredentials:
      additionalProperties: false
      properties:
        access_key_id:
          description: The access key ID that identifies the temporary credentials.
          type: string
        secret_access_key:
          description: The secret access key associated with the access key.
          type: string
        session_token:
          description: The generated JWT that users must pass to use the temporary credentials.
          type: string
      required:
        - access_key_id
        - secret_access_key
        - session_token
      title: R2 Temporary Credentials
      type: object
    RecipientInfo:
      additionalProperties: false
      properties:
        authentication_type:
          description: The delta sharing authentication type.
          enum:
            - AUTHENTICATION_TYPE_UNSPECIFIED
            - TOKEN
            - OAUTH_CLIENT_CREDENTIALS
          title: Authentication Type
          type: string
        comment:
          description: Description about the recipient.
          type: string
        created_at:
          description: Time at which this share was created, in epoch milliseconds.
          type: integer
        created_by:
          description: Username of the creator of the share.
          type: string
        id:
          description: Unique ID of the recipient.
          type: string
        name:
          description: The name of the recipient.
          type: string
        owner:
          description: Username of the recipient owner.
          type: string
        properties:
          additionalProperties:
            type: string
          description: A map of key-value properties attached to the securable.
          propertyNames:
            type: string
          type: object
        tokens:
          description: This field is only present when the authentication_type is TOKEN.
          items:
            $ref: "#/$defs/unitycatalog.recipients.v1.RecipientToken.schema.strict.json"
          type: array
        updated_at:
          description: Time at which this share was updated, in epoch milliseconds.
          type: integer
        updated_by:
          description: Username of share updater.
          type: string
      required:
        - name
        - authentication_type
        - owner
      title: Recipient Info
      type: object
    RecipientToken:
      additionalProperties: false
      properties:
        activation_url:
          description: Full activation URL to retrieve the access token. It will be empty if the token is already retrieved.
          type: string
        created_at:
          description: Time at which this recipient token was created, in epoch milliseconds.
          type: integer
        created_by:
          description: Username of recipient token creator.
          type: string
        expiration_time:
          description: Expiration timestamp of the token in epoch milliseconds.
          type: integer
        id:
          description: Unique ID of the recipient token.
          type: string
        updated_at:
          description: Time at which this recipient token was updated, in epoch milliseconds.
          type: integer
        updated_by:
          description: Username of recipient token updater.
          type: string
      required:
        - id
        - created_at
        - created_by
        - activation_url
        - expiration_time
        - updated_at
        - updated_by
      title: Recipient Token
      type: object
    SchemaInfo:
      additionalProperties: false
      description: A schema is a namespace within a catalog that contains tables.
      properties:
        catalog_name:
          description: Name of parent catalog.
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        created_at:
          description: Time at which this schema was created, in epoch milliseconds.
          type: integer
        created_by:
          description: Username of schema creator.
          type: string
        full_name:
          description: Full name of schema, in form of catalog_name.schema_name.
          type: string
        name:
          description: Name of schema, relative to parent catalog.
          type: string
        owner:
          description: Username of current owner of schema.
          type: string
        properties:
          additionalProperties:
            type: string
          description: A map of key-value properties attached to the securable.
          propertyNames:
            type: string
          type: object
        schema_id:
          description: Unique identifier for the schema.
          type: string
        updated_at:
          description: Time at which this schema was last updated, in epoch milliseconds.
          type: integer
        updated_by:
          description: Username of user who last modified schema.
          type: string
      required:
        - name
        - catalog_name
      title: Schema Info
      type: object
    Share:
      additionalProperties: false
      description:
        "A share is a logical grouping to share with recipients. A share can be shared with one or multiple recipients.\n\
        \ A recipient can access all resources in a share. A share may contain multiple schemas."
      properties:
        id:
          description: Unique identifier for the share.
          type: string
        name:
          description: Name of the share.
          minLength: 1
          type: string
      required:
        - name
      title: Share
      type: object
    ShareInfo:
      additionalProperties: false
      properties:
        added_at:
          description: The time when this data object is added to the share, in epoch milliseconds.
          type: integer
        added_by:
          description: Username of the sharer.
          type: string
        comment:
          description: A user-provided comment when adding the data object to the share.
          type: string
        data_object_type:
          description: Type of the data object.
          enum:
            - DATA_OBJECT_TYPE_UNSPECIFIED
            - TABLE
            - SCHEMA
          title: Data Object Type
          type: string
        enable_cdf:
          description: Whether to enable cdf or indicate if cdf is enabled on the shared object.
          type: boolean
        history_data_sharing_status:
          description: Whether to enable or disable sharing of data history. If not specified, the default is DISABLED.
          enum:
            - DISABLED
            - ENABLED
          title: History Status
          type: string
        name:
          description: For example, a table's fully qualified name is in the format of <catalog>.<schema>.<table>,
          title: A fully qualified name that uniquely identifies a data object.
          type: string
        partitions:
          description: Array of partitions for the shared data.
          items:
            type: string
          type: array
        shared_as:
          description:
            "If this new name is not provided, the object's original name will be used as the shared_as name.\n\
            \ The shared_as name must be unique within a share.\n For tables, the new name must follow the format of <schema>.<table>."
          title: A user-provided new name for the data object within the share.
          type: string
        start_version:
          description:
            "This allows data providers to control the lowest object version that is accessible by clients.\n If\
            \ specified, clients can query snapshots or changes for versions >= start_version.\n If not specified, clients\
            \ can only query starting from the version of the object at the time it was added to the share.\n\n NOTE: The\
            \ start_version should be <= the current version of the object."
          title: The start version associated with the object.
          type: integer
      required:
        - name
        - data_object_type
      title: Data Object
      type: object
    SharingSchema:
      additionalProperties: false
      description: A schema is a logical grouping of tables. A schema may contain multiple tables.
      properties:
        id:
          description: Unique identifier for the schema.
          type: string
        name:
          description: The name of the schema
          type: string
        share:
          description: The share name that the schema belongs to.
          type: string
      required:
        - name
        - share
      title: Sharing Schema
      type: object
    SharingTable:
      additionalProperties: false
      description: A table is a Delta Lake table or a view on top of a Delta Lake table.
      properties:
        id:
          description: Unique identifier for the table.
          type: string
        name:
          description: The name of the table.
          maxLength: 255
          minLength: 1
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
        schema:
          description: The schema name that the table belongs to.
          maxLength: 255
          minLength: 1
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        share:
          description: The share name that the table belongs to.
          maxLength: 255
          minLength: 1
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
        share_id:
          description: A unique identifier for the share this table belongs to.
          type: string
      required:
        - name
        - schema
        - share
      title: Sharing Table
      type: object
    Status:
      type: object
      properties:
        code:
          type: integer
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
          format: int32
        message:
          type: string
          description:
            A developer-facing error message, which should be in English. Any user-facing error message should
            be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the
            client.
        details:
          type: array
          items:
            $ref: "#/components/schemas/GoogleProtobufAny"
          description:
            A list of messages that carry the error details.  There is a common set of message types for APIs to
            use.
      description:
        "The `Status` type defines a logical error model that is suitable for different programming environments,
        including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three
        pieces of data: error code, error message, and error details. You can find out more about this error model and how
        to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    TableInfo:
      additionalProperties: false
      properties:
        column_id:
          description: a unique id for the column
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        name:
          description: Name of the column
          type: string
        nullable:
          description: Whether field may be Null.
          type: boolean
        partition_index:
          description: Partition index for column.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        position:
          description: Ordinal position of column (starting at position 0).
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_interval_type:
          description: Format of IntervalType.
          type: string
        type_json:
          description: Full data type specification, JSON-serialized.
          type: string
        type_name:
          description: Data type name.
          enum:
            - COLUMN_TYPE_NAME_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - SHORT
            - INT
            - LONG
            - FLOAT
            - DOUBLE
            - DATE
            - TIMESTAMP
            - STRING
            - BINARY
            - DECIMAL
            - INTERVAL
            - ARRAY
            - STRUCT
            - MAP
            - CHAR
            - "NULL"
            - USER_DEFINED_TYPE
            - TIMESTAMP_NTZ
            - VARIANT
            - TABLE_TYPE
          title: Column Type Name
          type: string
        type_precision:
          description: Digits of precision; required for DecimalTypes.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_scale:
          description: Digits to right of decimal; Required for DecimalTypes.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        type_text:
          description: Full data type specification as SQL/catalogString text.
          type: string
      required:
        - name
        - type_text
        - type_json
        - type_name
      title: Column Info
      type: object
    TableSummary:
      additionalProperties: false
      properties:
        full_name:
          description: The full name of the table.
          type: string
        table_type:
          enum:
            - TABLE_TYPE_UNSPECIFIED
            - MANAGED
            - EXTERNAL
          title: Table Type
          type: string
      required:
        - full_name
        - table_type
      title: Table Summary
      type: object
    TemporaryCredential:
      additionalProperties: false
      properties:
        access_key_id:
          description: The access key ID that identifies the temporary credentials.
          type: string
        access_point:
          description:
            The Amazon Resource Name (ARN) of the S3 access point for temporary credentials related the external
            location.
          type: string
        secret_access_key:
          description: The secret access key that can be used to sign AWS API requests.
          type: string
        session_token:
          description: The token that users must pass to AWS API to use the temporary credentials.
          type: string
      required:
        - access_key_id
        - access_point
        - secret_access_key
        - session_token
      title: Aws Temporary Credentials
      type: object
    UpdateCatalogRequest:
      additionalProperties: false
      description: Update a catalog
      properties:
        comment:
          description: User-provided free-form text description.
          type: string
        name:
          description: Name of catalog.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        new_name:
          description: Name of catalog.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        owner:
          description: Username of new owner of catalog.
          format: email
          type: string
        properties:
          additionalProperties:
            type: string
          description:
            "When provided in update request, the specified properties will override the existing properties.\n\
            \ To add and remove properties, one would need to perform a read-modify-write."
          propertyNames:
            type: string
          title: A map of key-value properties attached to the securable.
          type: object
      required:
        - name
      title: Update Catalog Request
      type: object
    UpdateCredentialRequest:
      additionalProperties: false
      properties:
        application_id:
          description: The application ID of the application registration within the referenced AAD tenant.
          type: string
        msi_resource_id:
          description: Msi resource id for use with managed identity authentication
          type: string
        object_id:
          description: Object id for use with managed identity authentication
          type: string
      title: Azure Managed Identity
      type: object
    UpdateExternalLocationRequest:
      additionalProperties: false
      description: Update an external location
      properties:
        comment:
          description: User-provided free-form text description.
          type: string
        credential_name:
          description: Name of the storage credential used with this location.
          type: string
        force:
          description: force update of the external location.
          type: boolean
        name:
          description: Name of external location.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        new_name:
          description: new name of the external location.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        owner:
          description: owner of the external location.
          format: email
          type: string
        read_only:
          description: Indicates whether the external location is read-only.
          type: boolean
        skip_validation:
          description: Skips validation of the storage credential associated with the external location.
          type: boolean
        url:
          description: Path URL of the external location.
          pattern: ^(?:(?:[a-zA-Z][a-zA-Z\d+\-.]*):)?(?://(?:[A-Za-z0-9\-\.]+(?::\d+)?))?(/[^\?#]*)?(?:\?([^\#]*))?(?:\#(.*))?$
          type: string
      required:
        - name
      title: Update External Location Request
      type: object
    UpdateRecipientRequest:
      additionalProperties: false
      description: Update a recipient
      properties:
        comment:
          description: Description about the recipient.
          type: string
        expiration_time:
          description: Expiration timestamp of the token, in epoch milliseconds.
          type: integer
        name:
          description: Name of the recipient.
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
        new_name:
          description: New name for the recipient
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
        owner:
          description: Username of the recipient owner.
          type: string
        properties:
          additionalProperties:
            type: string
          description:
            "When provided in update request, the specified properties will override the existing properties.\n\
            \ To add and remove properties, one would need to perform a read-modify-write."
          propertyNames:
            type: string
          title: Recipient properties as map of string key-value pairs.
          type: object
      required:
        - name
      title: Update Recipient Request
      type: object
    UpdateSchemaRequest:
      additionalProperties: false
      description: Update a Schema
      properties:
        comment:
          description: User-provided free-form text description.
          type: string
        full_name:
          description: Full name of schema, in form of catalog_name.schema_name.
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
        new_name:
          description: Name of schema.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        properties:
          additionalProperties:
            type: string
          description:
            "When provided in update request, the specified properties will override the existing properties.\n\
            \ To add and remove properties, one would need to perform a read-modify-write."
          propertyNames:
            type: string
          title: A map of key-value properties attached to the securable.
          type: object
      required:
        - full_name
      title: Update Schema Request
      type: object
    UpdateShareRequest:
      additionalProperties: false
      properties:
        added_at:
          description: The time when this data object is added to the share, in epoch milliseconds.
          type: integer
        added_by:
          description: Username of the sharer.
          type: string
        comment:
          description: A user-provided comment when adding the data object to the share.
          type: string
        data_object_type:
          description: Type of the data object.
          enum:
            - DATA_OBJECT_TYPE_UNSPECIFIED
            - TABLE
            - SCHEMA
          title: Data Object Type
          type: string
        enable_cdf:
          description: Whether to enable cdf or indicate if cdf is enabled on the shared object.
          type: boolean
        history_data_sharing_status:
          description: Whether to enable or disable sharing of data history. If not specified, the default is DISABLED.
          enum:
            - DISABLED
            - ENABLED
          title: History Status
          type: string
        name:
          description: For example, a table's fully qualified name is in the format of <catalog>.<schema>.<table>,
          title: A fully qualified name that uniquely identifies a data object.
          type: string
        partitions:
          description: Array of partitions for the shared data.
          items:
            type: string
          type: array
        shared_as:
          description:
            "If this new name is not provided, the object's original name will be used as the shared_as name.\n\
            \ The shared_as name must be unique within a share.\n For tables, the new name must follow the format of <schema>.<table>."
          title: A user-provided new name for the data object within the share.
          type: string
        start_version:
          description:
            "This allows data providers to control the lowest object version that is accessible by clients.\n If\
            \ specified, clients can query snapshots or changes for versions >= start_version.\n If not specified, clients\
            \ can only query starting from the version of the object at the time it was added to the share.\n\n NOTE: The\
            \ start_version should be <= the current version of the object."
          title: The start version associated with the object.
          type: integer
      required:
        - name
        - data_object_type
      title: Data Object
      type: object
    UpdateVolumeRequest:
      additionalProperties: false
      properties:
        comment:
          description: The comment attached to the volume
          maxLength: 65536
          minLength: 1
          type: string
        include_browse:
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          type: boolean
        name:
          description: The three-level (fully qualified) name of the volume
          minLength: 3
          type: string
        new_name:
          description: New name for the volume.
          minLength: 3
          type: string
        owner:
          description: The identifier of the user who owns the volume
          type: string
      required:
        - name
      title: Update Volume Request
      type: object
    VolumeInfo:
      additionalProperties: false
      properties:
        browse_only:
          description:
            "Indicates whether the principal is limited to retrieving metadata\n for the associated object through\
            \ the BROWSE privilege when include_browse\n is enabled in the request."
          type: boolean
        catalog_name:
          description: Name of parent catalog.
          type: string
        comment:
          description: User-provided free-form text description.
          type: string
        created_at:
          description: Time at which this catalog was created, in epoch milliseconds.
          type: integer
          minimum: 0
          exclusiveMinimum: true
        created_by:
          description: Username of catalog creator.
          type: string
        full_name:
          description: The three-level (fully qualified) name of the volume
          type: string
        metastore_id:
          description: The unique identifier of the metastore
          type: string
        name:
          description: Name of volume, relative to parent schema.
          type: string
        owner:
          description: Username of current owner of table.
          type: string
        schema_name:
          description: Name of parent schema.
          type: string
        storage_location:
          description: The storage location on the cloud
          type: string
        updated_at:
          description: Time at which this catalog was last updated, in epoch milliseconds.
          type: integer
        updated_by:
          description: Username of user who last modified catalog.
          type: string
        volume_id:
          description: The unique identifier of the volume
          type: string
        volume_type:
          description:
            "An external volume is located in the specified external location.\n A managed volume is located in\
            \ the default location which is specified\n by the parent schema, or the parent catalog, or the Metastore."
          enum:
            - VOLUME_TYPE_UNSPECIFIED
            - VOLUME_TYPE_EXTERNAL
            - VOLUME_TYPE_MANAGED
          title: Volume Type
          type: string
      required:
        - name
        - catalog_name
        - schema_name
        - full_name
        - storage_location
        - volume_id
        - volume_type
      title: Volume Info
      type: object
    GetSchemaRequest:
      additionalProperties: false
      description: Get a Schema
      properties:
        full_name:
          description: "Format: catalog_name.schema_name"
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          title: Full name of schema.
          type: string
      required:
        - full_name
      title: Get Schema Request
      type: object
    GetShareRequest:
      additionalProperties: false
      description: Get a share by name.
      properties:
        include_shared_data:
          description: Query for data to include in the share.
          type: boolean
        name:
          description: Name of the share.
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - name
      title: Get Share Request
      type: object
    DeleteRecipientRequest:
      additionalProperties: false
      description: Delete a recipient
      properties:
        name:
          description: Name of the recipient.
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
      required:
        - name
      title: Delete Recipient Request
      type: object
    GetVolumeRequest:
      additionalProperties: false
      properties:
        include_browse:
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          type: boolean
        name:
          description: The three-level (fully qualified) name of the volume
          minLength: 3
          type: string
      required:
        - name
      title: Get Volume Request
      type: object
    GetExternalLocationRequest:
      additionalProperties: false
      description: Get an external location
      properties:
        name:
          description: Name of external location.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - name
      title: Get External Location Request
      type: object
    DeleteTableRequest:
      additionalProperties: false
      description: Delete a table
      properties:
        full_name:
          description: Full name of the table.
          type: string
      required:
        - full_name
      title: Delete Table Request
      type: object
    DeleteExternalLocationRequest:
      additionalProperties: false
      description: Delete an external location
      properties:
        force:
          description: Force deletion even if the external location is not empty.
          type: boolean
        name:
          description: Name of external location.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - name
      title: Delete External Location Request
      type: object
    AwsIamRole:
      additionalProperties: false
      description: The AWS IAM role configuration.
      properties:
        external_id:
          description: The external ID used in role assumption to prevent the confused deputy problem.
          type: string
        role_arn:
          description: The Amazon Resource Name (ARN) of the AWS IAM role used to vend temporary credentials.
          type: string
        unity_catalog_iam_arn:
          description:
            "The Amazon Resource Name (ARN) of the AWS IAM user managed by Databricks.\n This is the identity that\
            \ is going to assume the AWS IAM role."
          type: string
      required:
        - external_id
        - role_arn
        - unity_catalog_iam_arn
      title: Aws Iam Role
      type: object
    DeleteVolumeRequest:
      additionalProperties: false
      properties:
        name:
          description: The three-level (fully qualified) name of the volume
          minLength: 3
          type: string
      required:
        - name
      title: Delete Volume Request
      type: object
    SharingSchemaInfo:
      additionalProperties: false
      description: "A schema is a logical grouping of tables.\n It may contain multiple tables."
      properties:
        description:
          description: User-provided free-form text description.
          type: string
        id:
          description: Unique identifier for the schema.
          type: string
        name:
          description: The name of the schema.
          minLength: 1
          type: string
        properties:
          additionalProperties:
            type: string
          description: A map of key-value properties attached to the securable.
          propertyNames:
            type: string
          type: object
        share:
          description: The share name that the schema belongs to.
          type: string
        share_id:
          description: The unique identifier for the share this schema belongs to.
          type: string
      required:
        - id
        - name
        - share
      title: A schema in a delta sharing service.
      type: object
    DeleteShareRequest:
      additionalProperties: false
      description: The caller must be a metastore admin or have the DELETE_SHARE privilege on the metastore.
      properties:
        name:
          description: Name of the share.
          minLength: 3
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
      required:
        - name
      title: Delete a share.
      type: object
    ListShareTablesRequest:
      additionalProperties: false
      description: List tables in a share.
      properties:
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
          exclusiveMaximum: true
        name:
          description: The share name to query. It's case-insensitive.
          minLength: 1
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
        page_token:
          description:
            "Specifies a page token to use. Set pageToken to the nextPageToken returned\n by a previous list request\
            \ to get the next page of results."
          type: string
      required:
        - name
      title: List Share Tables Request
      type: object
    ListCredentialsRequest:
      additionalProperties: false
      properties:
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
          exclusiveMaximum: true
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
        purpose:
          description: Return only credentials for the specified purpose.
          enum:
            - PURPOSE_UNSPECIFIED
            - STORAGE
            - SERVICE
          title: Purpose
          type: string
      title: List Credentials Request
      type: object
    GetCredentialRequest:
      additionalProperties: false
      description: Get a credential
      properties:
        name:
          description: Name of credential.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - name
      title: Get Credential Request
      type: object
    ListCatalogsRequest:
      additionalProperties: false
      description: List catalogs
      properties:
        max_results:
          description: The maximum number of results per page that should be returned.
          maximum: 1000
          type: integer
          minimum: 0
          exclusiveMinimum: true
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
      title: List Catalogs Request
      type: object
    InternalGetTableVersionParams:
      additionalProperties: false
      description:
        "helper message internally used to parse the rest request.\n we do this over a manual implementation since\
        \ the generated code\n will allow for snake_case as well as camelCase query parameters"
      properties:
        starting_timestamp:
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$
          type: string
      title: Internal Get Table Version Params
      type: object
    GetTableVersionRequest:
      additionalProperties: false
      description: Get the version of a table.
      properties:
        name:
          description: The table name to query. It's case-insensitive.
          minLength: 1
          type: string
        schema:
          description: The schema name to query. It's case-insensitive.
          minLength: 1
          type: string
        share:
          description: The share name to query. It's case-insensitive.
          minLength: 1
          type: string
        starting_timestamp:
          description:
            "The startingTimestamp of the query, a string in the  ISO8601 format, in the UTC timezone,\n such as\
            \ 2022-01-01T00:00:00Z. the server needs to return the earliest table version at\n or after the provided timestamp,\
            \ can be earlier than the timestamp of table version 0."
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$
          type: string
      required:
        - name
        - schema
        - share
      title: Get Table Version Request
      type: object
    GetRecipientRequest:
      additionalProperties: false
      description: Get a recipient by name.
      properties:
        name:
          description: Name of the recipient.
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
      required:
        - name
      title: Get Recipient Request
      type: object
    ListExternalLocationsRequest:
      additionalProperties: false
      description: List external locations
      properties:
        include_browse:
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          type: boolean
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
          exclusiveMaximum: true
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
      title: List External Locations Request
      type: object
    ListSharingSchemasRequest:
      additionalProperties: false
      description: List schemas in a share.
      properties:
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
          exclusiveMaximum: true
        page_token:
          description:
            "Specifies a page token to use. Set pageToken to the nextPageToken returned\n by a previous list request\
            \ to get the next page of results."
          type: string
        share:
          description: The share name to query. It's case-insensitive.
          minLength: 1
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
      required:
        - share
      title: List Sharing Schemas Request
      type: object
    ListSchemaTablesRequest:
      additionalProperties: false
      description: List tables in a schema.
      properties:
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 2147483648
          exclusiveMaximum: true
        name:
          description: The schema name to query. It's case-insensitive.
          minLength: 1
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
        page_token:
          description:
            "Specifies a page token to use. Set pageToken to the nextPageToken returned\n by a previous list request\
            \ to get the next page of results."
          type: string
        share:
          description: The share name to query. It's case-insensitive.
          minLength: 1
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
      required:
        - name
        - share
      title: List Schema Tables Request
      type: object
    ListRecipientsRequest:
      additionalProperties: false
      description: Request to list recipients.
      properties:
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
          exclusiveMaximum: true
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
      title: List Recipients Request
      type: object
    ListSharesRequest:
      additionalProperties: false
      description: Request to list shares.
      properties:
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
          exclusiveMaximum: true
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
      title: List Shares Request
      type: object
    DeleteCredentialRequest:
      additionalProperties: false
      description: Delete a credential
      properties:
        name:
          description: Name of credential.
          minLength: 1
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          type: string
      required:
        - name
      title: Delete Credential Request
      type: object
    ListVolumesRequest:
      additionalProperties: false
      description: List volumes
      properties:
        catalog_name:
          description: The identifier of the catalog
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        include_browse:
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          type: boolean
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
          exclusiveMaximum: true
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
        schema_name:
          description: The identifier of the schema
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - catalog_name
        - schema_name
      title: List Volumes Request
      type: object
    GetCatalogRequest:
      additionalProperties: false
      description: Get a catalog
      properties:
        include_browse:
          description:
            Whether to include catalogs in the response for which the principal can only access selective metadata
            for
          type: boolean
        name:
          description: Name of catalog.
          minLength: 1
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - name
      title: Get Catalog Request
      type: object
    GetTableMetadataRequest:
      additionalProperties: false
      description: Get metadata of a table.
      properties:
        name:
          description: The table name to query. It's case-insensitive.
          minLength: 1
          type: string
        schema:
          description: The schema name to query. It's case-insensitive.
          minLength: 1
          type: string
        share:
          description: The share name to query. It's case-insensitive.
          minLength: 1
          type: string
      required:
        - name
        - share
        - schema
      title: Get Table Metadata Request
      type: object
    ListTablesRequest:
      additionalProperties: false
      properties:
        catalog_name:
          description: Name of parent catalog for tables of interest.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        include_browse:
          description:
            Whether to include tables in the response for which the principal can only access selective metadata
            for
          type: boolean
        include_delta_metadata:
          description: Whether delta metadata should be included in the response.
          type: boolean
        include_manifest_capabilities:
          description: Whether to include a manifest containing capabilities the table has.
          type: boolean
        max_results:
          description: The maximum number of results per page that should be returned.
          maximum: 50
          type: integer
          minimum: 0
          exclusiveMinimum: true
        omit_columns:
          description: Whether to omit the columns of the table from the response or not.
          type: boolean
        omit_properties:
          description: Whether to omit the properties of the table from the response or not.
          type: boolean
        omit_username:
          description:
            Whether to omit the username of the table (e.g. owner, updated_by, created_by) from the response or
            not.
          type: boolean
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
        schema_name:
          description: Name of parent schema for tables of interest.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - schema_name
        - catalog_name
      title: List Tables Request
      type: object
    AwsIamRoleConfig:
      additionalProperties: false
      description: The AWS IAM role configuration.
      properties:
        role_arn:
          description: The Amazon Resource Name (ARN) of the AWS IAM role used to vend temporary credentials.
          type: string
      required:
        - role_arn
      title: Aws Iam Role Config
      type: object
    ListSchemasRequest:
      additionalProperties: false
      description: List Schemas in a catalog
      properties:
        catalog_name:
          description: Name of parent catalog.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        include_browse:
          description:
            Whether to include schemas in the response for which the principal can only access selective metadata
            for
          type: boolean
        max_results:
          description: The maximum number of results per page that should be returned.
          type: integer
          minimum: 0
          exclusiveMinimum: true
          maximum: 1000
          exclusiveMaximum: true
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
      required:
        - catalog_name
      title: List Schemas Request
      type: object
    DeleteCatalogRequest:
      additionalProperties: false
      description: Delete a catalog
      properties:
        force:
          description: Force deletion even if the catalog is not empty.
          type: boolean
        name:
          description: Name of catalog.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
      required:
        - name
      title: Delete Catalog Request
      type: object
    GetTableExistsRequest:
      additionalProperties: false
      description: Get boolean reflecting if table exists
      properties:
        full_name:
          description: Full name of the table.
          type: string
      required:
        - full_name
      title: Get Table Exists Request
      type: object
    DeleteSchemaRequest:
      additionalProperties: false
      description: Delete a Schema
      properties:
        force:
          description: Force deletion even if the schema is not empty.
          type: boolean
        full_name:
          description: "Format: catalog_name.schema_name"
          pattern: ^[a-z][0-9a-z._]*[0-9a-z]$
          title: Full name of schema to delete.
          type: string
      required:
        - full_name
      title: Delete Schema Request
      type: object
    ListTableSummariesRequest:
      additionalProperties: false
      properties:
        catalog_name:
          description: Name of parent catalog for tables of interest.
          minLength: 3
          pattern: ^[a-z][0-9a-z_]*[0-9a-z]$
          type: string
        include_manifest_capabilities:
          description: Whether to include a manifest containing capabilities the table has.
          type: boolean
        max_results:
          description: The maximum number of results per page that should be returned.
          maximum: 10000
          type: integer
          minimum: 0
          exclusiveMinimum: true
        page_token:
          description: Opaque pagination token to go to next page based on previous query.
          type: string
        schema_name_pattern:
          description: A sql LIKE pattern (% and _) for schema names. All schemas will be returned if not set or empty.
          type: string
        table_name_pattern:
          description: A sql LIKE pattern (% and _) for table names. All tables will be returned if not set or empty.
          type: string
      required:
        - catalog_name
      title: List Table Summaries Request
      type: object
    GetTableRequest:
      additionalProperties: false
      description: Get a table
      properties:
        full_name:
          description: Full name of the table.
          type: string
        include_browse:
          description:
            Whether to include tables in the response for which the principal can only access selective metadata
            for
          type: boolean
        include_delta_metadata:
          description: Whether delta metadata should be included in the response.
          type: boolean
        include_manifest_capabilities:
          description: Whether to include a manifest containing capabilities the table has.
          type: boolean
      required:
        - full_name
      title: Get Table Request
      type: object
