// @generated by protoc-gen-es v2.5.2 with parameter "target=ts,json_types=false"
// @generated from file unitycatalog/catalogs/v1/svc.proto (package unitycatalog.catalogs.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_gnostic_openapi_v3_annotations } from "../../../gnostic/openapi/v3/annotations_pb";
import { file_gnostic_openapi_v3_openapiv3 } from "../../../gnostic/openapi/v3/openapiv3_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_api_client } from "../../../google/api/client_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import { file_google_api_resource } from "../../../google/api/resource_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { CatalogInfo, CatalogInfoSchema } from "./models_pb";
import { file_unitycatalog_catalogs_v1_models } from "./models_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file unitycatalog/catalogs/v1/svc.proto.
 */
export const file_unitycatalog_catalogs_v1_svc: GenFile = /*@__PURE__*/
  fileDesc("CiJ1bml0eWNhdGFsb2cvY2F0YWxvZ3MvdjEvc3ZjLnByb3RvEhh1bml0eWNhdGFsb2cuY2F0YWxvZ3MudjEiewoTTGlzdENhdGFsb2dzUmVxdWVzdBInCgttYXhfcmVzdWx0cxgCIAEoBUIN4EEBukgHGgUQ6AcgAEgAiAEBEhwKCnBhZ2VfdG9rZW4YAyABKAlCA+BBAUgBiAEBQg4KDF9tYXhfcmVzdWx0c0INCgtfcGFnZV90b2tlbiKBAQoUTGlzdENhdGFsb2dzUmVzcG9uc2USNwoIY2F0YWxvZ3MYASADKAsyJS51bml0eWNhdGFsb2cuY2F0YWxvZ3MudjEuQ2F0YWxvZ0luZm8SHAoPbmV4dF9wYWdlX3Rva2VuGAIgASgJSACIAQFCEgoQX25leHRfcGFnZV90b2tlbiLcAwoUQ3JlYXRlQ2F0YWxvZ1JlcXVlc3QSMwoEbmFtZRgBIAEoCUIl4EECukgfch0QAzIZXlthLXpdWzAtOWEtel9dKlswLTlhLXpdJBIZCgdjb21tZW50GAIgASgJQgPgQQFIAIgBARJXCgpwcm9wZXJ0aWVzGAMgAygLMj4udW5pdHljYXRhbG9nLmNhdGFsb2dzLnYxLkNyZWF0ZUNhdGFsb2dSZXF1ZXN0LlByb3BlcnRpZXNFbnRyeUID4EEBEiYKDHN0b3JhZ2Vfcm9vdBgEIAEoCUIL4EEBukgFcgOIAQFIAYgBARJCCg1wcm92aWRlcl9uYW1lGAUgASgJQibgQQG6SCByHhADMhpeW2Etel1bMC05YS16LV9dKlswLTlhLXpdJEgCiAEBEj4KCnNoYXJlX25hbWUYBiABKAlCJeBBAbpIH3IdEAMyGV5bYS16XVswLTlhLXpfXSpbMC05YS16XSRIA4gBARoxCg9Qcm9wZXJ0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIKCghfY29tbWVudEIPCg1fc3RvcmFnZV9yb290QhAKDl9wcm92aWRlcl9uYW1lQg0KC19zaGFyZV9uYW1lInsKEUdldENhdGFsb2dSZXF1ZXN0EjEKBG5hbWUYASABKAlCI+BBArpIHXIbMhleW2Etel1bMC05YS16X10qWzAtOWEtel0kEiAKDmluY2x1ZGVfYnJvd3NlGAIgASgIQgPgQQFIAIgBAUIRCg9faW5jbHVkZV9icm93c2Ui2gIKFFVwZGF0ZUNhdGFsb2dSZXF1ZXN0EjMKBG5hbWUYASABKAlCJeBBArpIH3IdEAMyGV5bYS16XVswLTlhLXpfXSpbMC05YS16XSQSFwoFb3duZXIYAiABKAlCA+BBAUgAiAEBEhkKB2NvbW1lbnQYAyABKAlCA+BBAUgBiAEBElcKCnByb3BlcnRpZXMYBCADKAsyPi51bml0eWNhdGFsb2cuY2F0YWxvZ3MudjEuVXBkYXRlQ2F0YWxvZ1JlcXVlc3QuUHJvcGVydGllc0VudHJ5QgPgQQESNwoIbmV3X25hbWUYBSABKAlCJeBBAbpIH3IdEAMyGV5bYS16XVswLTlhLXpfXSpbMC05YS16XSQaMQoPUHJvcGVydGllc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAFCCAoGX293bmVyQgoKCF9jb21tZW50Im4KFERlbGV0ZUNhdGFsb2dSZXF1ZXN0EjMKBG5hbWUYASABKAlCJeBBArpIH3IdEAMyGV5bYS16XVswLTlhLXpfXSpbMC05YS16XSQSFwoFZm9yY2UYAiABKAhCA+BBAUgAiAEBQggKBl9mb3JjZTLgBQoPQ2F0YWxvZ3NTZXJ2aWNlEpEBCgxMaXN0Q2F0YWxvZ3MSLS51bml0eWNhdGFsb2cuY2F0YWxvZ3MudjEuTGlzdENhdGFsb2dzUmVxdWVzdBouLnVuaXR5Y2F0YWxvZy5jYXRhbG9ncy52MS5MaXN0Q2F0YWxvZ3NSZXNwb25zZSIiukcOKgxMaXN0Q2F0YWxvZ3OC0+STAgsSCS9jYXRhbG9ncxKOAQoNQ3JlYXRlQ2F0YWxvZxIuLnVuaXR5Y2F0YWxvZy5jYXRhbG9ncy52MS5DcmVhdGVDYXRhbG9nUmVxdWVzdBolLnVuaXR5Y2F0YWxvZy5jYXRhbG9ncy52MS5DYXRhbG9nSW5mbyImukcPKg1DcmVhdGVDYXRhbG9ngtPkkwIOOgEqIgkvY2F0YWxvZ3MSiQEKCkdldENhdGFsb2cSKy51bml0eWNhdGFsb2cuY2F0YWxvZ3MudjEuR2V0Q2F0YWxvZ1JlcXVlc3QaJS51bml0eWNhdGFsb2cuY2F0YWxvZ3MudjEuQ2F0YWxvZ0luZm8iJ7pHDCoKR2V0Q2F0YWxvZ4LT5JMCEhIQL2NhdGFsb2dzL3tuYW1lfRKVAQoNVXBkYXRlQ2F0YWxvZxIuLnVuaXR5Y2F0YWxvZy5jYXRhbG9ncy52MS5VcGRhdGVDYXRhbG9nUmVxdWVzdBolLnVuaXR5Y2F0YWxvZy5jYXRhbG9ncy52MS5DYXRhbG9nSW5mbyItukcPKg1VcGRhdGVDYXRhbG9ngtPkkwIVOgEqMhAvY2F0YWxvZ3Mve25hbWV9EoMBCg1EZWxldGVDYXRhbG9nEi4udW5pdHljYXRhbG9nLmNhdGFsb2dzLnYxLkRlbGV0ZUNhdGFsb2dSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Iiq6Rw8qDURlbGV0ZUNhdGFsb2eC0+STAhIqEC9jYXRhbG9ncy97bmFtZX1C/gEKHGNvbS51bml0eWNhdGFsb2cuY2F0YWxvZ3MudjFCCFN2Y1Byb3RvUAFaUmdpdGh1Yi5jb20vZGVsdGEtaW5jdWJhdG9yL2RlbHRhLXNoYXJpbmctcnMvZ28vdW5pdHljYXRhbG9nL2NhdGFsb2dzL3YxO2NhdGFsb2dzdjGiAgNVQ1iqAhhVbml0eWNhdGFsb2cuQ2F0YWxvZ3MuVjHKAhhVbml0eWNhdGFsb2dcQ2F0YWxvZ3NcVjHiAiRVbml0eWNhdGFsb2dcQ2F0YWxvZ3NcVjFcR1BCTWV0YWRhdGHqAhpVbml0eWNhdGFsb2c6OkNhdGFsb2dzOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_gnostic_openapi_v3_annotations, file_gnostic_openapi_v3_openapiv3, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_struct, file_unitycatalog_catalogs_v1_models]);

/**
 * List catalogs
 *
 * @generated from message unitycatalog.catalogs.v1.ListCatalogsRequest
 */
export type ListCatalogsRequest = Message<"unitycatalog.catalogs.v1.ListCatalogsRequest"> & {
  /**
   * The maximum number of results per page that should be returned.
   *
   * @generated from field: optional int32 max_results = 2;
   */
  maxResults?: number;

  /**
   * Opaque pagination token to go to next page based on previous query.
   *
   * @generated from field: optional string page_token = 3;
   */
  pageToken?: string;
};

/**
 * Describes the message unitycatalog.catalogs.v1.ListCatalogsRequest.
 * Use `create(ListCatalogsRequestSchema)` to create a new message.
 */
export const ListCatalogsRequestSchema: GenMessage<ListCatalogsRequest> = /*@__PURE__*/
  messageDesc(file_unitycatalog_catalogs_v1_svc, 0);

/**
 * List catalogs response.
 *
 * @generated from message unitycatalog.catalogs.v1.ListCatalogsResponse
 */
export type ListCatalogsResponse = Message<"unitycatalog.catalogs.v1.ListCatalogsResponse"> & {
  /**
   * The catalogs returned.
   *
   * @generated from field: repeated unitycatalog.catalogs.v1.CatalogInfo catalogs = 1;
   */
  catalogs: CatalogInfo[];

  /**
   * The next_page_token value to include in the next List request.
   *
   * @generated from field: optional string next_page_token = 2;
   */
  nextPageToken?: string;
};

/**
 * Describes the message unitycatalog.catalogs.v1.ListCatalogsResponse.
 * Use `create(ListCatalogsResponseSchema)` to create a new message.
 */
export const ListCatalogsResponseSchema: GenMessage<ListCatalogsResponse> = /*@__PURE__*/
  messageDesc(file_unitycatalog_catalogs_v1_svc, 1);

/**
 * Create a new catalog
 *
 * @generated from message unitycatalog.catalogs.v1.CreateCatalogRequest
 */
export type CreateCatalogRequest = Message<"unitycatalog.catalogs.v1.CreateCatalogRequest"> & {
  /**
   * Name of catalog.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * User-provided free-form text description.
   *
   * @generated from field: optional string comment = 2;
   */
  comment?: string;

  /**
   * A map of key-value properties attached to the securable.
   *
   * @generated from field: map<string, string> properties = 3;
   */
  properties: { [key: string]: string };

  /**
   * Storage root URL for managed tables within catalog.
   *
   * @generated from field: optional string storage_root = 4;
   */
  storageRoot?: string;

  /**
   * The name of delta sharing provider.
   *
   * A Delta Sharing catalog is a catalog that is based on a Delta share on a remote sharing server.
   *
   * @generated from field: optional string provider_name = 5;
   */
  providerName?: string;

  /**
   * The name of the share under the share provider.
   *
   * @generated from field: optional string share_name = 6;
   */
  shareName?: string;
};

/**
 * Describes the message unitycatalog.catalogs.v1.CreateCatalogRequest.
 * Use `create(CreateCatalogRequestSchema)` to create a new message.
 */
export const CreateCatalogRequestSchema: GenMessage<CreateCatalogRequest> = /*@__PURE__*/
  messageDesc(file_unitycatalog_catalogs_v1_svc, 2);

/**
 * Get a catalog
 *
 * @generated from message unitycatalog.catalogs.v1.GetCatalogRequest
 */
export type GetCatalogRequest = Message<"unitycatalog.catalogs.v1.GetCatalogRequest"> & {
  /**
   * Name of catalog.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Whether to include catalogs in the response for which the principal can only access selective metadata for
   *
   * @generated from field: optional bool include_browse = 2;
   */
  includeBrowse?: boolean;
};

/**
 * Describes the message unitycatalog.catalogs.v1.GetCatalogRequest.
 * Use `create(GetCatalogRequestSchema)` to create a new message.
 */
export const GetCatalogRequestSchema: GenMessage<GetCatalogRequest> = /*@__PURE__*/
  messageDesc(file_unitycatalog_catalogs_v1_svc, 3);

/**
 * Update a catalog
 *
 * @generated from message unitycatalog.catalogs.v1.UpdateCatalogRequest
 */
export type UpdateCatalogRequest = Message<"unitycatalog.catalogs.v1.UpdateCatalogRequest"> & {
  /**
   * Name of catalog.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Username of new owner of catalog.
   *
   * @generated from field: optional string owner = 2;
   */
  owner?: string;

  /**
   * User-provided free-form text description.
   *
   * @generated from field: optional string comment = 3;
   */
  comment?: string;

  /**
   * A map of key-value properties attached to the securable.
   *
   * When provided in update request, the specified properties will override the existing properties.
   * To add and remove properties, one would need to perform a read-modify-write.
   *
   * @generated from field: map<string, string> properties = 4;
   */
  properties: { [key: string]: string };

  /**
   * Name of catalog.
   *
   * @generated from field: string new_name = 5;
   */
  newName: string;
};

/**
 * Describes the message unitycatalog.catalogs.v1.UpdateCatalogRequest.
 * Use `create(UpdateCatalogRequestSchema)` to create a new message.
 */
export const UpdateCatalogRequestSchema: GenMessage<UpdateCatalogRequest> = /*@__PURE__*/
  messageDesc(file_unitycatalog_catalogs_v1_svc, 4);

/**
 * Delete a catalog
 *
 * @generated from message unitycatalog.catalogs.v1.DeleteCatalogRequest
 */
export type DeleteCatalogRequest = Message<"unitycatalog.catalogs.v1.DeleteCatalogRequest"> & {
  /**
   * Name of catalog.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Force deletion even if the catalog is not empty.
   *
   * @generated from field: optional bool force = 2;
   */
  force?: boolean;
};

/**
 * Describes the message unitycatalog.catalogs.v1.DeleteCatalogRequest.
 * Use `create(DeleteCatalogRequestSchema)` to create a new message.
 */
export const DeleteCatalogRequestSchema: GenMessage<DeleteCatalogRequest> = /*@__PURE__*/
  messageDesc(file_unitycatalog_catalogs_v1_svc, 5);

/**
 * Manage catalogs and schemas in the service.
 *
 * @generated from service unitycatalog.catalogs.v1.CatalogsService
 */
export const CatalogsService: GenService<{
  /**
   * List catalogs
   *
   * Gets an array of catalogs in the metastore. If the caller is the metastore admin,
   * all catalogs will be retrieved. Otherwise, only catalogs owned by the caller
   * (or for which the caller has the USE_CATALOG privilege) will be retrieved.
   * There is no guarantee of a specific ordering of the elements in the array.
   *
   * @generated from rpc unitycatalog.catalogs.v1.CatalogsService.ListCatalogs
   */
  listCatalogs: {
    methodKind: "unary";
    input: typeof ListCatalogsRequestSchema;
    output: typeof ListCatalogsResponseSchema;
  },
  /**
   * Create a new catalog
   *
   * Creates a new catalog instance in the parent metastore if the caller
   * is a metastore admin or has the CREATE_CATALOG privilege.
   *
   * @generated from rpc unitycatalog.catalogs.v1.CatalogsService.CreateCatalog
   */
  createCatalog: {
    methodKind: "unary";
    input: typeof CreateCatalogRequestSchema;
    output: typeof CatalogInfoSchema;
  },
  /**
   * Get a catalog
   *
   * Gets the specified catalog in a metastore. The caller must be a metastore admin,
   * the owner of the catalog, or a user that has the USE_CATALOG privilege set for their account.
   *
   * @generated from rpc unitycatalog.catalogs.v1.CatalogsService.GetCatalog
   */
  getCatalog: {
    methodKind: "unary";
    input: typeof GetCatalogRequestSchema;
    output: typeof CatalogInfoSchema;
  },
  /**
   * Update a catalog
   *
   * Updates the catalog that matches the supplied name. The caller must be either
   * the owner of the catalog, or a metastore admin (when changing the owner field of the catalog).
   *
   * @generated from rpc unitycatalog.catalogs.v1.CatalogsService.UpdateCatalog
   */
  updateCatalog: {
    methodKind: "unary";
    input: typeof UpdateCatalogRequestSchema;
    output: typeof CatalogInfoSchema;
  },
  /**
   * Delete a catalog
   *
   * Deletes the catalog that matches the supplied name. The caller must
   * be a metastore admin or the owner of the catalog.
   *
   * @generated from rpc unitycatalog.catalogs.v1.CatalogsService.DeleteCatalog
   */
  deleteCatalog: {
    methodKind: "unary";
    input: typeof DeleteCatalogRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_unitycatalog_catalogs_v1_svc, 0);

