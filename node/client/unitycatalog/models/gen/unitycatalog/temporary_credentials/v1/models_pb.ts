// @generated by protoc-gen-es v2.5.2 with parameter "target=ts,json_types=false"
// @generated from file unitycatalog/temporary_credentials/v1/models.proto (package unitycatalog.temporary_credentials.v1, syntax proto3)
/* eslint-disable */

import type { Message } from "@bufbuild/protobuf";
import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";

/**
 * Describes the file unitycatalog/temporary_credentials/v1/models.proto.
 */
export const file_unitycatalog_temporary_credentials_v1_models: GenFile =
  /*@__PURE__*/
  fileDesc(
    "CjJ1bml0eWNhdGFsb2cvdGVtcG9yYXJ5X2NyZWRlbnRpYWxzL3YxL21vZGVscy5wcm90bxIldW5pdHljYXRhbG9nLnRlbXBvcmFyeV9jcmVkZW50aWFscy52MSIrChZBenVyZVVzZXJEZWxlZ2F0aW9uU2FzEhEKCXNhc190b2tlbhgBIAEoCSIdCghBenVyZUFhZBIRCglhYWRfdG9rZW4YASABKAkiYQoWUjJUZW1wb3JhcnlDcmVkZW50aWFscxIVCg1hY2Nlc3Nfa2V5X2lkGAEgASgJEhkKEXNlY3JldF9hY2Nlc3Nfa2V5GAIgASgJEhUKDXNlc3Npb25fdG9rZW4YAyABKAkiJAoNR2NwT2F1dGhUb2tlbhITCgtvYXV0aF90b2tlbhgBIAEoCSJ4ChdBd3NUZW1wb3JhcnlDcmVkZW50aWFscxIVCg1hY2Nlc3Nfa2V5X2lkGAEgASgJEhQKDGFjY2Vzc19wb2ludBgCIAEoCRIZChFzZWNyZXRfYWNjZXNzX2tleRgDIAEoCRIVCg1zZXNzaW9uX3Rva2VuGAQgASgJIp0EChNUZW1wb3JhcnlDcmVkZW50aWFsEiAKD2V4cGlyYXRpb25fdGltZRgBIAEoA0IHukgEIgIgABIVCgN1cmwYAiABKAlCCLpIBXIDiAEBEmIKGWF6dXJlX3VzZXJfZGVsZWdhdGlvbl9zYXMYZCABKAsyPS51bml0eWNhdGFsb2cudGVtcG9yYXJ5X2NyZWRlbnRpYWxzLnYxLkF6dXJlVXNlckRlbGVnYXRpb25TYXNIABJECglhenVyZV9hYWQYZSABKAsyLy51bml0eWNhdGFsb2cudGVtcG9yYXJ5X2NyZWRlbnRpYWxzLnYxLkF6dXJlQWFkSAASXgoUYXdzX3RlbXBfY3JlZGVudGlhbHMYZiABKAsyPi51bml0eWNhdGFsb2cudGVtcG9yYXJ5X2NyZWRlbnRpYWxzLnYxLkF3c1RlbXBvcmFyeUNyZWRlbnRpYWxzSAASTwoPZ2NwX29hdXRoX3Rva2VuGGcgASgLMjQudW5pdHljYXRhbG9nLnRlbXBvcmFyeV9jcmVkZW50aWFscy52MS5HY3BPYXV0aFRva2VuSAASXAoTcjJfdGVtcF9jcmVkZW50aWFscxhoIAEoCzI9LnVuaXR5Y2F0YWxvZy50ZW1wb3JhcnlfY3JlZGVudGlhbHMudjEuUjJUZW1wb3JhcnlDcmVkZW50aWFsc0gAQhQKC2NyZWRlbnRpYWxzEgW6SAIIAULYAgopY29tLnVuaXR5Y2F0YWxvZy50ZW1wb3JhcnlfY3JlZGVudGlhbHMudjFCC01vZGVsc1Byb3RvUAFabGdpdGh1Yi5jb20vZGVsdGEtaW5jdWJhdG9yL2RlbHRhLXNoYXJpbmctcnMvZ28vdW5pdHljYXRhbG9nL3RlbXBvcmFyeV9jcmVkZW50aWFscy92MTt0ZW1wb3JhcnlfY3JlZGVudGlhbHN2MaICA1VUWKoCJFVuaXR5Y2F0YWxvZy5UZW1wb3JhcnlDcmVkZW50aWFscy5WMcoCJFVuaXR5Y2F0YWxvZ1xUZW1wb3JhcnlDcmVkZW50aWFsc1xWMeICMFVuaXR5Y2F0YWxvZ1xUZW1wb3JhcnlDcmVkZW50aWFsc1xWMVxHUEJNZXRhZGF0YeoCJlVuaXR5Y2F0YWxvZzo6VGVtcG9yYXJ5Q3JlZGVudGlhbHM6OlYxYgZwcm90bzM",
    [file_buf_validate_validate],
  );

/**
 * @generated from message unitycatalog.temporary_credentials.v1.AzureUserDelegationSas
 */
export type AzureUserDelegationSas =
  Message<"unitycatalog.temporary_credentials.v1.AzureUserDelegationSas"> & {
    /**
     * The signed URI (SAS Token) used to access blob services for a given path
     *
     * @generated from field: string sas_token = 1;
     */
    sasToken: string;
  };

/**
 * Describes the message unitycatalog.temporary_credentials.v1.AzureUserDelegationSas.
 * Use `create(AzureUserDelegationSasSchema)` to create a new message.
 */
export const AzureUserDelegationSasSchema: GenMessage<AzureUserDelegationSas> =
  /*@__PURE__*/
  messageDesc(file_unitycatalog_temporary_credentials_v1_models, 0);

/**
 * @generated from message unitycatalog.temporary_credentials.v1.AzureAad
 */
export type AzureAad =
  Message<"unitycatalog.temporary_credentials.v1.AzureAad"> & {
    /**
     * Opaque token that contains claims that you can use in Azure Active Directory to access cloud services.
     *
     * @generated from field: string aad_token = 1;
     */
    aadToken: string;
  };

/**
 * Describes the message unitycatalog.temporary_credentials.v1.AzureAad.
 * Use `create(AzureAadSchema)` to create a new message.
 */
export const AzureAadSchema: GenMessage<AzureAad> =
  /*@__PURE__*/
  messageDesc(file_unitycatalog_temporary_credentials_v1_models, 1);

/**
 * @generated from message unitycatalog.temporary_credentials.v1.R2TemporaryCredentials
 */
export type R2TemporaryCredentials =
  Message<"unitycatalog.temporary_credentials.v1.R2TemporaryCredentials"> & {
    /**
     * The access key ID that identifies the temporary credentials.
     *
     * @generated from field: string access_key_id = 1;
     */
    accessKeyId: string;

    /**
     * The secret access key associated with the access key.
     *
     * @generated from field: string secret_access_key = 2;
     */
    secretAccessKey: string;

    /**
     * The generated JWT that users must pass to use the temporary credentials.
     *
     * @generated from field: string session_token = 3;
     */
    sessionToken: string;
  };

/**
 * Describes the message unitycatalog.temporary_credentials.v1.R2TemporaryCredentials.
 * Use `create(R2TemporaryCredentialsSchema)` to create a new message.
 */
export const R2TemporaryCredentialsSchema: GenMessage<R2TemporaryCredentials> =
  /*@__PURE__*/
  messageDesc(file_unitycatalog_temporary_credentials_v1_models, 2);

/**
 * @generated from message unitycatalog.temporary_credentials.v1.GcpOauthToken
 */
export type GcpOauthToken =
  Message<"unitycatalog.temporary_credentials.v1.GcpOauthToken"> & {
    /**
     * The OAuth token used to access Google Cloud services.
     *
     * @generated from field: string oauth_token = 1;
     */
    oauthToken: string;
  };

/**
 * Describes the message unitycatalog.temporary_credentials.v1.GcpOauthToken.
 * Use `create(GcpOauthTokenSchema)` to create a new message.
 */
export const GcpOauthTokenSchema: GenMessage<GcpOauthToken> =
  /*@__PURE__*/
  messageDesc(file_unitycatalog_temporary_credentials_v1_models, 3);

/**
 * @generated from message unitycatalog.temporary_credentials.v1.AwsTemporaryCredentials
 */
export type AwsTemporaryCredentials =
  Message<"unitycatalog.temporary_credentials.v1.AwsTemporaryCredentials"> & {
    /**
     * The access key ID that identifies the temporary credentials.
     *
     * @generated from field: string access_key_id = 1;
     */
    accessKeyId: string;

    /**
     * The Amazon Resource Name (ARN) of the S3 access point for temporary credentials related the external location.
     *
     * @generated from field: string access_point = 2;
     */
    accessPoint: string;

    /**
     * The secret access key that can be used to sign AWS API requests.
     *
     * @generated from field: string secret_access_key = 3;
     */
    secretAccessKey: string;

    /**
     * The token that users must pass to AWS API to use the temporary credentials.
     *
     * @generated from field: string session_token = 4;
     */
    sessionToken: string;
  };

/**
 * Describes the message unitycatalog.temporary_credentials.v1.AwsTemporaryCredentials.
 * Use `create(AwsTemporaryCredentialsSchema)` to create a new message.
 */
export const AwsTemporaryCredentialsSchema: GenMessage<AwsTemporaryCredentials> =
  /*@__PURE__*/
  messageDesc(file_unitycatalog_temporary_credentials_v1_models, 4);

/**
 * The response to the GenerateTemporaryTableCredentialsRequest.
 *
 * @generated from message unitycatalog.temporary_credentials.v1.TemporaryCredential
 */
export type TemporaryCredential =
  Message<"unitycatalog.temporary_credentials.v1.TemporaryCredential"> & {
    /**
     * Server time when the credential will expire, in epoch milliseconds.
     * The API client is advised to cache the credential given this expiration time.
     *
     * @generated from field: int64 expiration_time = 1;
     */
    expirationTime: bigint;

    /**
     * The URL of the storage path accessible by the temporary credential.
     *
     * @generated from field: string url = 2;
     */
    url: string;

    /**
     * The credentials to access the table.
     *
     * @generated from oneof unitycatalog.temporary_credentials.v1.TemporaryCredential.credentials
     */
    credentials:
      | {
          /**
           * Credentials for Azure Blob Storage.
           *
           * @generated from field: unitycatalog.temporary_credentials.v1.AzureUserDelegationSas azure_user_delegation_sas = 100;
           */
          value: AzureUserDelegationSas;
          case: "azureUserDelegationSas";
        }
      | {
          /**
           * Credentials for Azure Active Directory.
           *
           * @generated from field: unitycatalog.temporary_credentials.v1.AzureAad azure_aad = 101;
           */
          value: AzureAad;
          case: "azureAad";
        }
      | {
          /**
           * Credentials for AWS S3.
           *
           * @generated from field: unitycatalog.temporary_credentials.v1.AwsTemporaryCredentials aws_temp_credentials = 102;
           */
          value: AwsTemporaryCredentials;
          case: "awsTempCredentials";
        }
      | {
          /**
           * Credentials for Google Cloud Storage.
           *
           * @generated from field: unitycatalog.temporary_credentials.v1.GcpOauthToken gcp_oauth_token = 103;
           */
          value: GcpOauthToken;
          case: "gcpOauthToken";
        }
      | {
          /**
           * Credentials for R2.
           *
           * @generated from field: unitycatalog.temporary_credentials.v1.R2TemporaryCredentials r2_temp_credentials = 104;
           */
          value: R2TemporaryCredentials;
          case: "r2TempCredentials";
        }
      | { case: undefined; value?: undefined };
  };

/**
 * Describes the message unitycatalog.temporary_credentials.v1.TemporaryCredential.
 * Use `create(TemporaryCredentialSchema)` to create a new message.
 */
export const TemporaryCredentialSchema: GenMessage<TemporaryCredential> =
  /*@__PURE__*/
  messageDesc(file_unitycatalog_temporary_credentials_v1_models, 5);
