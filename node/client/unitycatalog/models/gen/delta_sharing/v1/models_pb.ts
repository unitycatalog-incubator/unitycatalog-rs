// @generated by protoc-gen-es v2.5.2 with parameter "target=ts,json_types=false"
// @generated from file delta_sharing/v1/models.proto (package delta_sharing.v1, syntax proto3)
/* eslint-disable */

import type { Message } from "@bufbuild/protobuf";
import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb";

/**
 * Describes the file delta_sharing/v1/models.proto.
 */
export const file_delta_sharing_v1_models: GenFile =
  /*@__PURE__*/
  fileDesc(
    "Ch1kZWx0YV9zaGFyaW5nL3YxL21vZGVscy5wcm90bxIQZGVsdGFfc2hhcmluZy52MSI+CgVTaGFyZRIYCgRuYW1lGAEgASgJQgrgQQi6SARyAhABEhQKAmlkGAIgASgJQgPgQQNIAIgBAUIFCgNfaWQiQgoGU2NoZW1hEgwKBG5hbWUYASABKAkSDQoFc2hhcmUYAiABKAkSFAoCaWQYAyABKAlCA+BBA0gAiAEBQgUKA19pZCL0AQoFVGFibGUSNwoEbmFtZRgBIAEoCUIp4EEIukgjciEQARj/ATIaXlthLXpdWzAtOWEtei5fXSpbMC05YS16XSQSNQoGc2NoZW1hGAIgASgJQiW6SCJyIBABGP8BMhleW2Etel1bMC05YS16X10qWzAtOWEtel0kEjUKBXNoYXJlGAMgASgJQia6SCNyIRABGP8BMhpeW2Etel1bMC05YS16Ll9dKlswLTlhLXpdJBIUCgJpZBgEIAEoCUID4EEDSACIAQESGgoIc2hhcmVfaWQYBSABKAlCA+BBA0gBiAEBQgUKA19pZEILCglfc2hhcmVfaWRCgAEKFGNvbS5kZWx0YV9zaGFyaW5nLnYxQgtNb2RlbHNQcm90b1ABogIDRFhYqgIPRGVsdGFTaGFyaW5nLlYxygIPRGVsdGFTaGFyaW5nXFYx4gIbRGVsdGFTaGFyaW5nXFYxXEdQQk1ldGFkYXRh6gIQRGVsdGFTaGFyaW5nOjpWMWIGcHJvdG8z",
    [file_buf_validate_validate, file_google_api_field_behavior],
  );

/**
 * A share is a logical grouping to share with recipients. A share can be shared with one or multiple recipients.
 * A recipient can access all resources in a share. A share may contain multiple schemas.
 *
 * @generated from message delta_sharing.v1.Share
 */
export type Share = Message<"delta_sharing.v1.Share"> & {
  /**
   * Name of the share.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Unique identifier for the share.
   *
   * @generated from field: optional string id = 2;
   */
  id?: string;
};

/**
 * Describes the message delta_sharing.v1.Share.
 * Use `create(ShareSchema)` to create a new message.
 */
export const ShareSchema: GenMessage<Share> =
  /*@__PURE__*/
  messageDesc(file_delta_sharing_v1_models, 0);

/**
 * A schema in a delta sharing service.
 *
 * A schema is a logical grouping of tables.
 * A schema may contain multiple tables.
 *
 * @generated from message delta_sharing.v1.Schema
 */
export type Schema = Message<"delta_sharing.v1.Schema"> & {
  /**
   * The name of the schema
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The share name that the schema belongs to.
   *
   * @generated from field: string share = 2;
   */
  share: string;

  /**
   * Unique identifier for the schema.
   *
   * @generated from field: optional string id = 3;
   */
  id?: string;
};

/**
 * Describes the message delta_sharing.v1.Schema.
 * Use `create(SchemaSchema)` to create a new message.
 */
export const SchemaSchema: GenMessage<Schema> =
  /*@__PURE__*/
  messageDesc(file_delta_sharing_v1_models, 1);

/**
 * A table is a Delta Lake table or a view on top of a Delta Lake table.
 *
 * @generated from message delta_sharing.v1.Table
 */
export type Table = Message<"delta_sharing.v1.Table"> & {
  /**
   * The name of the table.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The schema name that the table belongs to.
   *
   * @generated from field: string schema = 2;
   */
  schema: string;

  /**
   * The share name that the table belongs to.
   *
   * @generated from field: string share = 3;
   */
  share: string;

  /**
   * Unique identifier for the table.
   *
   * @generated from field: optional string id = 4;
   */
  id?: string;

  /**
   * A unique identifier for the share this table belongs to.
   *
   * @generated from field: optional string share_id = 5;
   */
  shareId?: string;
};

/**
 * Describes the message delta_sharing.v1.Table.
 * Use `create(TableSchema)` to create a new message.
 */
export const TableSchema: GenMessage<Table> =
  /*@__PURE__*/
  messageDesc(file_delta_sharing_v1_models, 2);
