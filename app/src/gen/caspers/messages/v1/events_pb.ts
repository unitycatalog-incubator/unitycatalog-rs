//*
// CloudEvent Protobuf Format
//
// - Required context attributes are explicitly represented.
// - Optional and Extension context attributes are carried in a map structure.
// - Data may be represented as binary, text, or protobuf messages.

// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file caspers/messages/v1/events.proto (package caspers.messages.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file caspers/messages/v1/events.proto.
 */
export const file_caspers_messages_v1_events: GenFile = /*@__PURE__*/
  fileDesc("CiBjYXNwZXJzL21lc3NhZ2VzL3YxL2V2ZW50cy5wcm90bxITY2FzcGVycy5tZXNzYWdlcy52MSKOBQoKQ2xvdWRFdmVudBITCgJpZBgBIAEoCUIHukgEcgIQARIYCgZzb3VyY2UYAiABKAlCCLpIBXIDkAEBEhQKDHNwZWNfdmVyc2lvbhgDIAEoCRIVCgR0eXBlGAQgASgJQge6SARyAhABEkMKCmF0dHJpYnV0ZXMYBSADKAsyLy5jYXNwZXJzLm1lc3NhZ2VzLnYxLkNsb3VkRXZlbnQuQXR0cmlidXRlc0VudHJ5EhUKC2JpbmFyeV9kYXRhGAYgASgMSAASEwoJdGV4dF9kYXRhGAcgASgJSAASKgoKcHJvdG9fZGF0YRgIIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlIABIoCgR0aW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBprCg9BdHRyaWJ1dGVzRW50cnkSCwoDa2V5GAEgASgJEkcKBXZhbHVlGAIgASgLMjguY2FzcGVycy5tZXNzYWdlcy52MS5DbG91ZEV2ZW50LkNsb3VkRXZlbnRBdHRyaWJ1dGVWYWx1ZToCOAEa5wEKGENsb3VkRXZlbnRBdHRyaWJ1dGVWYWx1ZRIUCgpjZV9ib29sZWFuGAEgASgISAASFAoKY2VfaW50ZWdlchgCIAEoBUgAEhMKCWNlX3N0cmluZxgDIAEoCUgAEhIKCGNlX2J5dGVzGAQgASgMSAASGgoGY2VfdXJpGAUgASgJQgi6SAVyA4gBAUgAEh4KCmNlX3VyaV9yZWYYBiABKAlCCLpIBXIDkAEBSAASMgoMY2VfdGltZXN0YW1wGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAQgYKBGF0dHJCBgoEZGF0YSJCCg9DbG91ZEV2ZW50QmF0Y2gSLwoGZXZlbnRzGAEgAygLMh8uY2FzcGVycy5tZXNzYWdlcy52MS5DbG91ZEV2ZW50QpQBChdjb20uY2FzcGVycy5tZXNzYWdlcy52MUILRXZlbnRzUHJvdG9QAaICA0NNWKoCE0Nhc3BlcnMuTWVzc2FnZXMuVjHKAhNDYXNwZXJzXE1lc3NhZ2VzXFYx4gIfQ2FzcGVyc1xNZXNzYWdlc1xWMVxHUEJNZXRhZGF0YeoCFUNhc3BlcnM6Ok1lc3NhZ2VzOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_protobuf_any, file_google_protobuf_timestamp]);

/**
 * @generated from message caspers.messages.v1.CloudEvent
 */
export type CloudEvent = Message<"caspers.messages.v1.CloudEvent"> & {
  /**
   * Identifies the event. Producers MUST ensure that source + id
   * is unique for each distinct event. If a duplicate event is re-sent
   * (e.g. due to a network error) it MAY have the same id. Consumers
   * MAY assume that Events with identical source and id are duplicates.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Identifies the context in which an event happened. Often this will
   * include information such as the type of the event source, the organization
   * publishing the event or the process that produced the event. The exact syntax
   * and semantics behind the data encoded in the URI is defined by the event producer.
   *
   * Producers MUST ensure that source + id is unique for each distinct event.
   *
   * An application MAY assign a unique source to each distinct producer,
   * which makes it easy to produce unique IDs since no other producer will
   * have the same source. The application MAY use UUIDs, URNs, DNS authorities
   * or an application-specific scheme to create unique source identifiers.
   * A source MAY include more than one producer. In that case the producers MUST
   * collaborate to ensure that source + id is unique for each distinct event.
   *
   * @generated from field: string source = 2;
   */
  source: string;

  /**
   * The version of the CloudEvents specification which the event uses.
   * This enables the interpretation of the context. Compliant event producers
   * MUST use a value of 1.0 when referring to this version of the specification.
   *
   * Currently, this attribute will only have the 'major' and 'minor' version
   * numbers included in it. This allows for 'patch' changes to the specification
   * to be made without changing this property's value in the serialization.
   * Note: for 'release candidate' releases a suffix might be used for testing purposes.
   *
   * @generated from field: string spec_version = 3;
   */
  specVersion: string;

  /**
   * This attribute contains a value describing the type of event related to the
   * originating occurrence. Often this attribute is used for routing, observability
   * policy enforcement, etc. The format of this is producer defined and might
   * include information such as the version of the type
   *
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * Optional & Extension Attributes
   *
   * @generated from field: map<string, caspers.messages.v1.CloudEvent.CloudEventAttributeValue> attributes = 5;
   */
  attributes: { [key: string]: CloudEvent_CloudEventAttributeValue };

  /**
   * -- CloudEvent Data (Bytes, Text, or Proto)
   *
   * @generated from oneof caspers.messages.v1.CloudEvent.data
   */
  data: {
    /**
     * @generated from field: bytes binary_data = 6;
     */
    value: Uint8Array;
    case: "binaryData";
  } | {
    /**
     * @generated from field: string text_data = 7;
     */
    value: string;
    case: "textData";
  } | {
    /**
     * @generated from field: google.protobuf.Any proto_data = 8;
     */
    value: Any;
    case: "protoData";
  } | { case: undefined; value?: undefined };

  /**
   * Timestamp of when the occurrence happened. If the time of the
   * occurrence cannot be determined then this attribute MAY be set
   * to some other time (such as the current time) by the CloudEvents
   * producer, however all producers for the same source MUST be
   * consistent in this respect. In other words, either they all use the
   * actual time of the occurrence or they all use the same algorithm to
   * determine the value used.
   *
   * @generated from field: google.protobuf.Timestamp time = 9;
   */
  time?: Timestamp;
};

/**
 * Describes the message caspers.messages.v1.CloudEvent.
 * Use `create(CloudEventSchema)` to create a new message.
 */
export const CloudEventSchema: GenMessage<CloudEvent> = /*@__PURE__*/
  messageDesc(file_caspers_messages_v1_events, 0);

/**
 * *
 * The CloudEvent specification defines
 * seven attribute value types...
 *
 * @generated from message caspers.messages.v1.CloudEvent.CloudEventAttributeValue
 */
export type CloudEvent_CloudEventAttributeValue = Message<"caspers.messages.v1.CloudEvent.CloudEventAttributeValue"> & {
  /**
   * @generated from oneof caspers.messages.v1.CloudEvent.CloudEventAttributeValue.attr
   */
  attr: {
    /**
     * @generated from field: bool ce_boolean = 1;
     */
    value: boolean;
    case: "ceBoolean";
  } | {
    /**
     * @generated from field: int32 ce_integer = 2;
     */
    value: number;
    case: "ceInteger";
  } | {
    /**
     * @generated from field: string ce_string = 3;
     */
    value: string;
    case: "ceString";
  } | {
    /**
     * @generated from field: bytes ce_bytes = 4;
     */
    value: Uint8Array;
    case: "ceBytes";
  } | {
    /**
     * @generated from field: string ce_uri = 5;
     */
    value: string;
    case: "ceUri";
  } | {
    /**
     * @generated from field: string ce_uri_ref = 6;
     */
    value: string;
    case: "ceUriRef";
  } | {
    /**
     * @generated from field: google.protobuf.Timestamp ce_timestamp = 7;
     */
    value: Timestamp;
    case: "ceTimestamp";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message caspers.messages.v1.CloudEvent.CloudEventAttributeValue.
 * Use `create(CloudEvent_CloudEventAttributeValueSchema)` to create a new message.
 */
export const CloudEvent_CloudEventAttributeValueSchema: GenMessage<CloudEvent_CloudEventAttributeValue> = /*@__PURE__*/
  messageDesc(file_caspers_messages_v1_events, 0, 0);

/**
 * *
 * CloudEvent Protobuf Batch Format
 *
 *
 * @generated from message caspers.messages.v1.CloudEventBatch
 */
export type CloudEventBatch = Message<"caspers.messages.v1.CloudEventBatch"> & {
  /**
   * @generated from field: repeated caspers.messages.v1.CloudEvent events = 1;
   */
  events: CloudEvent[];
};

/**
 * Describes the message caspers.messages.v1.CloudEventBatch.
 * Use `create(CloudEventBatchSchema)` to create a new message.
 */
export const CloudEventBatchSchema: GenMessage<CloudEventBatch> = /*@__PURE__*/
  messageDesc(file_caspers_messages_v1_events, 1);

