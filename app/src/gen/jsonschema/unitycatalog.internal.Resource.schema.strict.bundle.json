{
  "$defs": {
    "google.protobuf.Struct.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "title": "Struct",
      "type": "object"
    },
    "unitycatalog.catalogs.v1.CatalogInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "A catalog is a root-level namespace that contains schemas.",
      "properties": {
        "browse_only": {
          "description": "Indicates whether the principal is limited to retrieving metadata\n for the associated object through the BROWSE privilege when include_browse\n is enabled in the request.",
          "type": "boolean"
        },
        "catalog_type": {
          "description": "The type of the catalog.",
          "enum": [
            "CATALOG_TYPE_UNSPECIFIED",
            "MANAGED_CATALOG",
            "DELTASHARING_CATALOG",
            "SYSTEM_CATALOG"
          ],
          "title": "Catalog Type",
          "type": "string"
        },
        "comment": {
          "description": "User-provided free-form text description.",
          "type": "string"
        },
        "created_at": {
          "description": "Time at which this catalog was created, in epoch milliseconds.",
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        "created_by": {
          "description": "Username of catalog creator.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the catalog.",
          "type": "string"
        },
        "name": {
          "description": "Name of catalog.",
          "type": "string"
        },
        "owner": {
          "description": "Username of current owner of catalog.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/$defs/google.protobuf.Struct.schema.strict.json",
          "description": "A map of key-value properties attached to the securable."
        },
        "provider_name": {
          "description": "A Delta Sharing catalog is a catalog that is based on a Delta share on a remote sharing server.",
          "title": "The name of delta sharing provider.",
          "type": "string"
        },
        "share_name": {
          "description": "The name of the share under the share provider.",
          "type": "string"
        },
        "storage_root": {
          "description": "Storage root URL for managed tables within catalog.",
          "type": "string"
        },
        "updated_at": {
          "description": "Time at which this catalog was last updated, in epoch milliseconds.",
          "type": "integer"
        },
        "updated_by": {
          "description": "Username of user who last modified catalog.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "Catalog Info",
      "type": "object"
    },
    "unitycatalog.credentials.v1.AzureManagedIdentity.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "application_id": {
          "description": "The application ID of the application registration within the referenced AAD tenant.",
          "type": "string"
        },
        "msi_resource_id": {
          "description": "Msi resource id for use with managed identity authentication",
          "type": "string"
        },
        "object_id": {
          "description": "Object id for use with managed identity authentication",
          "type": "string"
        }
      },
      "title": "Azure Managed Identity",
      "type": "object"
    },
    "unitycatalog.credentials.v1.AzureServicePrincipal.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "application_id": {
          "description": "The application ID of the application registration within the referenced AAD tenant.",
          "type": "string"
        },
        "client_secret": {
          "description": "The client secret generated for the above app ID in AAD.",
          "type": "string"
        },
        "directory_id": {
          "description": "The directory ID corresponding to the Azure Active Directory (AAD) tenant of the application.",
          "type": "string"
        },
        "federated_token_file": {
          "description": "Specifically useful for workload identity federation.",
          "title": "Location of the file containing a federated token.",
          "type": "string"
        }
      },
      "required": [
        "directory_id",
        "application_id"
      ],
      "title": "Azure Service Principal",
      "type": "object"
    },
    "unitycatalog.credentials.v1.AzureStorageKey.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "account_key": {
          "description": "The account key of the storage account.",
          "type": "string"
        },
        "account_name": {
          "description": "The name of the storage account.",
          "type": "string"
        }
      },
      "required": [
        "account_name",
        "account_key"
      ],
      "title": "Azure Storage Key",
      "type": "object"
    },
    "unitycatalog.credentials.v1.CredentialInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "azure_managed_identity": {
          "$ref": "#/$defs/unitycatalog.credentials.v1.AzureManagedIdentity.schema.strict.json"
        },
        "azure_service_principal": {
          "$ref": "#/$defs/unitycatalog.credentials.v1.AzureServicePrincipal.schema.strict.json"
        },
        "azure_storage_key": {
          "$ref": "#/$defs/unitycatalog.credentials.v1.AzureStorageKey.schema.strict.json"
        },
        "comment": {
          "description": "User-provided free-form text description.",
          "type": "string"
        },
        "created_at": {
          "description": "Time at which this credential was created, in epoch milliseconds.",
          "type": "integer"
        },
        "created_by": {
          "description": "Username of credential creator.",
          "type": "string"
        },
        "full_name": {
          "description": "The full name of the credential.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier of the credential.",
          "type": "string"
        },
        "name": {
          "description": "The name must be unique among storage and service credentials within the metastore.",
          "title": "The credential name.",
          "type": "string"
        },
        "owner": {
          "description": "Username of current owner of credential.",
          "type": "string"
        },
        "purpose": {
          "description": "Indicates the purpose of the credential.",
          "enum": [
            "PURPOSE_UNSPECIFIED",
            "STORAGE",
            "SERVICE"
          ],
          "title": "Purpose",
          "type": "string"
        },
        "read_only": {
          "description": "Only applicable when purpose is STORAGE.",
          "title": "Whether the credential is usable only for read operations.",
          "type": "boolean"
        },
        "updated_at": {
          "description": "Time at which this credential was last updated, in epoch milliseconds.",
          "type": "integer"
        },
        "updated_by": {
          "description": "Username of user who last modified credential.",
          "type": "string"
        },
        "used_for_managed_storage": {
          "description": "Only applicable when purpose is STORAGE.",
          "title": "Whether this credential is the current metastore's root storage credential.",
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name",
        "purpose",
        "read_only",
        "used_for_managed_storage"
      ],
      "title": "Credential Info",
      "type": "object"
    },
    "unitycatalog.external_locations.v1.ExternalLocationInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "browse_only": {
          "description": "Indicates whether the principal is limited to retrieving metadata\n for the associated object through the BROWSE privilege when include_browse is enabled in the request.",
          "type": "boolean"
        },
        "comment": {
          "description": "User-provided free-form text description.",
          "type": "string"
        },
        "created_at": {
          "description": "Time at which this catalog was created, in epoch milliseconds.",
          "type": "integer"
        },
        "created_by": {
          "description": "Username of catalog creator.",
          "type": "string"
        },
        "credential_id": {
          "description": "Unique ID of the location's storage credential.",
          "type": "string"
        },
        "credential_name": {
          "description": "Name of the storage credential used with this location.",
          "type": "string"
        },
        "external_location_id": {
          "type": "string"
        },
        "name": {
          "description": "Name of the external location.",
          "type": "string"
        },
        "owner": {
          "description": "The owner of the external location.",
          "type": "string"
        },
        "read_only": {
          "description": "Indicates whether the external location is read-only.",
          "type": "boolean"
        },
        "updated_at": {
          "description": "Time at which this catalog was last updated, in epoch milliseconds.",
          "type": "integer"
        },
        "updated_by": {
          "description": "Username of user who last modified catalog.",
          "type": "string"
        },
        "url": {
          "description": "Path URL of the external location.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "url",
        "credential_name",
        "read_only",
        "credential_id"
      ],
      "title": "External Location Info",
      "type": "object"
    },
    "unitycatalog.internal.Resource.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "Dummy message to hold all resources.",
      "properties": {
        "catalog_info": {
          "$ref": "#/$defs/unitycatalog.catalogs.v1.CatalogInfo.schema.strict.json"
        },
        "column_info": {
          "$ref": "#/$defs/unitycatalog.tables.v1.ColumnInfo.schema.strict.json"
        },
        "credential_info": {
          "$ref": "#/$defs/unitycatalog.credentials.v1.CredentialInfo.schema.strict.json"
        },
        "external_location_info": {
          "$ref": "#/$defs/unitycatalog.external_locations.v1.ExternalLocationInfo.schema.strict.json"
        },
        "recipient_info": {
          "$ref": "#/$defs/unitycatalog.recipients.v1.RecipientInfo.schema.strict.json"
        },
        "schema_info": {
          "$ref": "#/$defs/unitycatalog.schemas.v1.SchemaInfo.schema.strict.json"
        },
        "share_info": {
          "$ref": "#/$defs/unitycatalog.shares.v1.ShareInfo.schema.strict.json"
        },
        "sharing_schema_info": {
          "$ref": "#/$defs/unitycatalog.sharing.v1.SharingSchemaInfo.schema.strict.json"
        },
        "sharing_table": {
          "$ref": "#/$defs/unitycatalog.sharing.v1.SharingTable.schema.strict.json"
        },
        "table_info": {
          "$ref": "#/$defs/unitycatalog.tables.v1.TableInfo.schema.strict.json"
        }
      },
      "title": "Resource",
      "type": "object"
    },
    "unitycatalog.recipients.v1.RecipientInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "authentication_type": {
          "description": "The delta sharing authentication type.",
          "enum": [
            "AUTHENTICATION_TYPE_UNSPECIFIED",
            "TOKEN",
            "OAUTH_CLIENT_CREDENTIALS"
          ],
          "title": "Authentication Type",
          "type": "string"
        },
        "comment": {
          "description": "Description about the recipient.",
          "type": "string"
        },
        "created_at": {
          "description": "Time at which this share was created, in epoch milliseconds.",
          "type": "integer"
        },
        "created_by": {
          "description": "Username of the creator of the share.",
          "type": "string"
        },
        "id": {
          "description": "Unique ID of the recipient.",
          "type": "string"
        },
        "name": {
          "description": "The name of the recipient.",
          "type": "string"
        },
        "owner": {
          "description": "Username of the recipient owner.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/$defs/google.protobuf.Struct.schema.strict.json",
          "description": "A map of key-value properties attached to the securable."
        },
        "tokens": {
          "description": "This field is only present when the authentication_type is TOKEN.",
          "items": {
            "$ref": "#/$defs/unitycatalog.recipients.v1.RecipientToken.schema.strict.json"
          },
          "type": "array"
        },
        "updated_at": {
          "description": "Time at which this share was updated, in epoch milliseconds.",
          "type": "integer"
        },
        "updated_by": {
          "description": "Username of share updater.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "authentication_type",
        "owner"
      ],
      "title": "Recipient Info",
      "type": "object"
    },
    "unitycatalog.recipients.v1.RecipientToken.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "activation_url": {
          "description": "Full activation URL to retrieve the access token. It will be empty if the token is already retrieved.",
          "type": "string"
        },
        "created_at": {
          "description": "Time at which this recipient token was created, in epoch milliseconds.",
          "type": "integer"
        },
        "created_by": {
          "description": "Username of recipient token creator.",
          "type": "string"
        },
        "expiration_time": {
          "description": "Expiration timestamp of the token in epoch milliseconds.",
          "type": "integer"
        },
        "id": {
          "description": "Unique ID of the recipient token.",
          "type": "string"
        },
        "updated_at": {
          "description": "Time at which this recipient token was updated, in epoch milliseconds.",
          "type": "integer"
        },
        "updated_by": {
          "description": "Username of recipient token updater.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "created_at",
        "created_by",
        "activation_url",
        "expiration_time",
        "updated_at",
        "updated_by"
      ],
      "title": "Recipient Token",
      "type": "object"
    },
    "unitycatalog.schemas.v1.SchemaInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "A schema is a namespace within a catalog that contains tables.",
      "properties": {
        "catalog_name": {
          "description": "Name of parent catalog.",
          "type": "string"
        },
        "comment": {
          "description": "User-provided free-form text description.",
          "type": "string"
        },
        "created_at": {
          "description": "Time at which this schema was created, in epoch milliseconds.",
          "type": "integer"
        },
        "created_by": {
          "description": "Username of schema creator.",
          "type": "string"
        },
        "full_name": {
          "description": "Full name of schema, in form of catalog_name.schema_name.",
          "type": "string"
        },
        "name": {
          "description": "Name of schema, relative to parent catalog.",
          "type": "string"
        },
        "owner": {
          "description": "Username of current owner of schema.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/$defs/google.protobuf.Struct.schema.strict.json",
          "description": "A map of key-value properties attached to the securable."
        },
        "schema_id": {
          "description": "Unique identifier for the schema.",
          "type": "string"
        },
        "updated_at": {
          "description": "Time at which this schema was last updated, in epoch milliseconds.",
          "type": "integer"
        },
        "updated_by": {
          "description": "Username of user who last modified schema.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "catalog_name"
      ],
      "title": "Schema Info",
      "type": "object"
    },
    "unitycatalog.shares.v1.DataObject.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "added_at": {
          "description": "The time when this data object is added to the share, in epoch milliseconds.",
          "type": "integer"
        },
        "added_by": {
          "description": "Username of the sharer.",
          "type": "string"
        },
        "comment": {
          "description": "A user-provided comment when adding the data object to the share.",
          "type": "string"
        },
        "data_object_type": {
          "description": "Type of the data object.",
          "enum": [
            "DATA_OBJECT_TYPE_UNSPECIFIED",
            "TABLE",
            "SCHEMA"
          ],
          "title": "Data Object Type",
          "type": "string"
        },
        "enable_cdf": {
          "description": "Whether to enable cdf or indicate if cdf is enabled on the shared object.",
          "type": "boolean"
        },
        "history_data_sharing_status": {
          "description": "Whether to enable or disable sharing of data history. If not specified, the default is DISABLED.",
          "enum": [
            "DISABLED",
            "ENABLED"
          ],
          "title": "History Status",
          "type": "string"
        },
        "name": {
          "description": "For example, a table's fully qualified name is in the format of \u003ccatalog\u003e.\u003cschema\u003e.\u003ctable\u003e,",
          "title": "A fully qualified name that uniquely identifies a data object.",
          "type": "string"
        },
        "partitions": {
          "description": "Array of partitions for the shared data.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "shared_as": {
          "description": "If this new name is not provided, the object's original name will be used as the shared_as name.\n The shared_as name must be unique within a share.\n For tables, the new name must follow the format of \u003cschema\u003e.\u003ctable\u003e.",
          "title": "A user-provided new name for the data object within the share.",
          "type": "string"
        },
        "start_version": {
          "description": "This allows data providers to control the lowest object version that is accessible by clients.\n If specified, clients can query snapshots or changes for versions \u003e= start_version.\n If not specified, clients can only query starting from the version of the object at the time it was added to the share.\n\n NOTE: The start_version should be \u003c= the current version of the object.",
          "title": "The start version associated with the object.",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "data_object_type"
      ],
      "title": "Data Object",
      "type": "object"
    },
    "unitycatalog.shares.v1.ShareInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "comment": {
          "description": "User-provided free-form text description.",
          "type": "string"
        },
        "created_at": {
          "description": "Time at which this share was created, in epoch milliseconds.",
          "type": "integer"
        },
        "created_by": {
          "description": "Username of the creator of the share.",
          "type": "string"
        },
        "data_objects": {
          "description": "A list of shared data objects within the share.",
          "items": {
            "$ref": "#/$defs/unitycatalog.shares.v1.DataObject.schema.strict.json"
          },
          "type": "array"
        },
        "id": {
          "description": "Unique ID of the recipient.",
          "type": "string"
        },
        "name": {
          "description": "Name of the share.",
          "type": "string"
        },
        "owner": {
          "description": "Username of current owner of share.",
          "type": "string"
        },
        "updated_at": {
          "description": "Time at which this share was updated, in epoch milliseconds.",
          "type": "integer"
        },
        "updated_by": {
          "description": "Username of share updater.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "Share Info",
      "type": "object"
    },
    "unitycatalog.sharing.v1.SharingSchemaInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "A schema is a logical grouping of tables.\n It may contain multiple tables.",
      "properties": {
        "description": {
          "description": "User-provided free-form text description.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the schema.",
          "type": "string"
        },
        "name": {
          "description": "The name of the schema.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "$ref": "#/$defs/google.protobuf.Struct.schema.strict.json",
          "description": "A map of key-value properties attached to the securable."
        },
        "share": {
          "description": "The share name that the schema belongs to.",
          "type": "string"
        },
        "share_id": {
          "description": "The unique identifier for the share this schema belongs to.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "share"
      ],
      "title": "A schema in a delta sharing service.",
      "type": "object"
    },
    "unitycatalog.sharing.v1.SharingTable.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "A table is a Delta Lake table or a view on top of a Delta Lake table.",
      "properties": {
        "id": {
          "description": "Unique identifier for the table.",
          "type": "string"
        },
        "name": {
          "description": "The name of the table.",
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-z][0-9a-z._]*[0-9a-z]$",
          "type": "string"
        },
        "schema": {
          "description": "The schema name that the table belongs to.",
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-z][0-9a-z_]*[0-9a-z]$",
          "type": "string"
        },
        "share": {
          "description": "The share name that the table belongs to.",
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-z][0-9a-z._]*[0-9a-z]$",
          "type": "string"
        },
        "share_id": {
          "description": "A unique identifier for the share this table belongs to.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "schema",
        "share"
      ],
      "title": "Sharing Table",
      "type": "object"
    },
    "unitycatalog.tables.v1.ColumnInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "column_id": {
          "description": "a unique id for the column",
          "type": "string"
        },
        "comment": {
          "description": "User-provided free-form text description.",
          "type": "string"
        },
        "name": {
          "description": "Name of the column",
          "type": "string"
        },
        "nullable": {
          "description": "Whether field may be Null.",
          "type": "boolean"
        },
        "partition_index": {
          "description": "Partition index for column.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "position": {
          "description": "Ordinal position of column (starting at position 0).",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "type_interval_type": {
          "description": "Format of IntervalType.",
          "type": "string"
        },
        "type_json": {
          "description": "Full data type specification, JSON-serialized.",
          "type": "string"
        },
        "type_name": {
          "description": "Data type name.",
          "enum": [
            "COLUMN_TYPE_NAME_UNSPECIFIED",
            "BOOLEAN",
            "BYTE",
            "SHORT",
            "INT",
            "LONG",
            "FLOAT",
            "DOUBLE",
            "DATE",
            "TIMESTAMP",
            "STRING",
            "BINARY",
            "DECIMAL",
            "INTERVAL",
            "ARRAY",
            "STRUCT",
            "MAP",
            "CHAR",
            "NULL",
            "USER_DEFINED_TYPE",
            "TIMESTAMP_NTZ",
            "VARIANT",
            "TABLE_TYPE"
          ],
          "title": "Column Type Name",
          "type": "string"
        },
        "type_precision": {
          "description": "Digits of precision; required for DecimalTypes.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "type_scale": {
          "description": "Digits to right of decimal; Required for DecimalTypes.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "type_text": {
          "description": "Full data type specification as SQL/catalogString text.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type_text",
        "type_json",
        "type_name"
      ],
      "title": "Column Info",
      "type": "object"
    },
    "unitycatalog.tables.v1.TableInfo.schema.strict.json": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "properties": {
        "catalog_name": {
          "description": "Name of parent catalog.",
          "type": "string"
        },
        "columns": {
          "description": "The array of ColumnInfo definitions of the table's columns.",
          "items": {
            "$ref": "#/$defs/unitycatalog.tables.v1.ColumnInfo.schema.strict.json"
          },
          "type": "array"
        },
        "comment": {
          "description": "User-provided free-form text description.",
          "type": "string"
        },
        "created_at": {
          "description": "Time at which this table was created, in epoch milliseconds.",
          "type": "integer"
        },
        "created_by": {
          "description": "Username of table creator.",
          "type": "string"
        },
        "data_source_format": {
          "description": "Data source format of the table.",
          "enum": [
            "DATA_SOURCE_FORMAT_UNSPECIFIED",
            "DELTA",
            "ICEBERG",
            "HUDI",
            "PARQUET",
            "CSV",
            "JSON",
            "ORC",
            "AVRO",
            "TEXT",
            "UNITY_CATALOG",
            "DELTASHARING"
          ],
          "title": "Data Source Format",
          "type": "string"
        },
        "deleted_at": {
          "description": "Time at which this table was deleted, in epoch milliseconds. Field is omitted if table is not deleted.",
          "type": "integer"
        },
        "full_name": {
          "description": "Full name of table, in form of catalog_name.schema_name.table_name.",
          "type": "string"
        },
        "name": {
          "description": "Name of table, relative to parent schema.",
          "type": "string"
        },
        "owner": {
          "description": "Username of current owner of table.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/$defs/google.protobuf.Struct.schema.strict.json",
          "description": "A map of key-value properties attached to the securable."
        },
        "schema_name": {
          "description": "Name of parent schema.",
          "type": "string"
        },
        "storage_credential_name": {
          "description": "Name of the storage credential, when a storage credential is configured for use with this table.",
          "type": "string"
        },
        "storage_location": {
          "description": "Storage root URL for table (for MANAGED, EXTERNAL tables)",
          "type": "string"
        },
        "table_id": {
          "description": "Unique identifier for the table.",
          "type": "string"
        },
        "table_type": {
          "enum": [
            "TABLE_TYPE_UNSPECIFIED",
            "MANAGED",
            "EXTERNAL"
          ],
          "title": "Table Type",
          "type": "string"
        },
        "updated_at": {
          "description": "Time at which this table was last updated, in epoch milliseconds.",
          "type": "integer"
        },
        "updated_by": {
          "description": "Username of user who last modified table.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "schema_name",
        "catalog_name",
        "table_type",
        "data_source_format"
      ],
      "title": "Table Info",
      "type": "object"
    }
  },
  "$id": "unitycatalog.internal.Resource.schema.strict.bundle.json",
  "$ref": "#/$defs/unitycatalog.internal.Resource.schema.strict.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema"
}
