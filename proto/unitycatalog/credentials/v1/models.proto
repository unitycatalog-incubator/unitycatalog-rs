syntax = "proto3";

package unitycatalog.credentials.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/struct.proto";

message AzureServicePrincipal {
  // The directory ID corresponding to the Azure Active Directory (AAD) tenant of the application.
  string directory_id = 1 [(google.api.field_behavior) = REQUIRED];

  // The application ID of the application registration within the referenced AAD tenant.
  string application_id = 2 [(google.api.field_behavior) = REQUIRED];

  oneof credential {
    option (buf.validate.oneof).required = true;

    // The client secret generated for the above app ID in AAD.
    string client_secret = 3;

    // Location of the file containing a federated token.
    //
    // Specifically useful for workload identity federation.
    string federated_token_file = 5;
  }
}

message AzureManagedIdentity {
  oneof identifier {
    // Object id for use with managed identity authentication
    string object_id = 1 [(google.api.field_behavior) = OPTIONAL];

    // The application ID of the application registration within the referenced AAD tenant.
    string application_id = 2 [(google.api.field_behavior) = OPTIONAL];

    // Msi resource id for use with managed identity authentication
    string msi_resource_id = 3 [(google.api.field_behavior) = OPTIONAL];
  }
}

message AzureStorageKey {
  // The name of the storage account.
  string account_name = 1 [(google.api.field_behavior) = REQUIRED];

  // The account key of the storage account.
  string account_key = 2 [(google.api.field_behavior) = REQUIRED];
}

// The AWS IAM role configuration.
message AwsIamRoleConfig {
  // The Amazon Resource Name (ARN) of the AWS IAM role used to vend temporary credentials.
  string role_arn = 1 [(google.api.field_behavior) = REQUIRED];
}

// The AWS IAM role configuration.
message AwsIamRole {
  // The external ID used in role assumption to prevent the confused deputy problem.
  string external_id = 1 [(google.api.field_behavior) = REQUIRED];
  // The Amazon Resource Name (ARN) of the AWS IAM role used to vend temporary credentials.
  string role_arn = 2 [(google.api.field_behavior) = REQUIRED];
  // The Amazon Resource Name (ARN) of the AWS IAM user managed by Databricks.
  // This is the identity that is going to assume the AWS IAM role.
  string unity_catalog_iam_arn = 3 [(google.api.field_behavior) = REQUIRED];
}

enum Purpose {
  PURPOSE_UNSPECIFIED = 0;

  STORAGE = 1;

  SERVICE = 2;
}

message CredentialInfo {
  option (google.api.resource) = {
    type: "unitycatalog.io/Credential"
    pattern: "credentials/{credential}"
    plural: "credentials"
    singular: "credential"
  };
  option (buf.validate.message).oneof = {
    fields: [
      "azure_service_principal",
      "azure_managed_identity",
      "azure_storage_key"
    ]
    required: true
  };

  // The credential name.
  //
  // The name must be unique among storage and service credentials within the metastore.
  string name = 1;

  // The unique identifier of the credential.
  optional string id = 2;

  // Indicates the purpose of the credential.
  Purpose purpose = 3;

  // Whether the credential is usable only for read operations.
  //
  // Only applicable when purpose is STORAGE.
  bool read_only = 4;

  // User-provided free-form text description.
  optional string comment = 5;

  // Username of current owner of credential.
  optional string owner = 6;

  // Time at which this credential was created, in epoch milliseconds.
  optional int64 created_at = 7;

  // Username of credential creator.
  optional string created_by = 8;

  // Time at which this credential was last updated, in epoch milliseconds.
  optional int64 updated_at = 9;

  // Username of user who last modified credential.
  optional string updated_by = 10;

  // Whether this credential is the current metastore's root storage credential.
  //
  // Only applicable when purpose is STORAGE.
  bool used_for_managed_storage = 11;

  // The full name of the credential.
  optional string full_name = 12;

  optional AzureServicePrincipal azure_service_principal = 100;

  optional AzureManagedIdentity azure_managed_identity = 101;

  optional AzureStorageKey azure_storage_key = 102;
}
